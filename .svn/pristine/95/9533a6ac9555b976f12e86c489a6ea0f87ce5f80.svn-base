<template>
  <createView :loading="loading" :body-style="{ height: '100%',padding:0,overflow: 'auto'}">
    <flexbox direction="column" align="stretch" class="create-container">
      <div class="create-flex">
        <sections title="基本信息">
          <div class="input-box" style="width:100%">
            <label class="input-label">归档类型</label>
            <div style="float:left" v-text="from.gdlx"></div>
          </div>
          <div class="input-box">
            <label class="input-label">所属客户</label>
            <div
              style="float:left;overflow: hidden;white-space: nowrap;"
              :title="customerName"
              v-text="customerName"
            ></div>
          </div>
          <div class="input-box">
            <label class="input-label">接收人</label>
            <div style="float:left" v-text="from.contactName"></div>
          </div>
          <div class="input-box">
            <label class="input-label">联系电话</label>
            <div style="float:left" v-text="from.contactPhone"></div>
          </div>
          <div class="input-box">
            <label class="input-label">报价单编号</label>
            <div style="float:left" v-text="from.bjdDh"></div>
          </div>
          <div class="input-box">
            <label class="input-label">报价人:</label>
            <div style="float:left" v-text="bjrName"></div>
          </div>
          <div class="input-box">
            <label class="input-label">负责部门</label>
            <div style="float:left" v-text="fzbmName"></div>
          </div>
          <div class="input-box">
            <label class="input-label">报价日期</label>
            <div style="float:left" v-text="from.bjrq"></div>
          </div>
          <div class="input-box">
            <label class="input-label">货期</label>
            <div style="float:left" v-text="from.hq"></div>
          </div>
          <div class="input-box">
            <label class="input-label">交货日期</label>
            <div style="float:left" v-text="from.jhrq"></div>
          </div>
          <div class="input-box">
            <label class="input-label">报价有效日期</label>
            <div style="float:left" v-text="from.bjyxq"></div>
          </div>
          <div class="input-box">
            <label class="input-label">创建人</label>
            <div v-text="creator"></div>
          </div>
          <div class="input-box">
            <label class="input-label">创建日期</label>
            <div v-text="from.createDate"></div>
          </div>
          <div class="input-box">
            <label class="input-label">发票类型</label>
            <div style="float:left" v-text="fplxName"></div>
          </div>
          <div class="input-box">
            <label class="input-label">报价阶段</label>
            <div style="float:left" v-text="from.bjjd"></div>
          </div>
          <div class="input-box">
            <label class="input-label">销售机会:</label>
            <div style="float:left" v-text="from.jhbh"></div>
          </div>
          <div class="input-box">
            <label class="input-label">整单折扣(%)</label>
            <div style="float:left" v-text="from.zdzk"></div>
          </div>
          <div class="input-box">
            <label class="input-label">备注</label>
            <div style="float:left" v-text="from.remark"></div>
          </div>
          <div class="input-box">
            <label class="input-label">共享人</label>
            <div style="float:left" v-text="from.gxrName"></div>
          </div>
          <div class="input-box">
            <label class="input-label">下次提醒时间</label>
            <div style="float:left" v-text="from.xctx"></div>
          </div>
          <div class="input-box"></div>
          <div class="input-box">
            <label class="input-label">是否补单</label>
            <div style="float:left" v-text="from.sfbd"></div>
          </div>
          <div class="input-box">
            <label class="input-label">单位抬头</label>
            <div style="float:left" v-text="dwttName"></div>
          </div>

          <div class="input-box" style="width:100%">
            <label class="input-label">上传附件</label>
            <ul class="uploadStyle">
              <li v-for="(item,index) in fileList" :key="index">
                <a
                  style="color:#409eff"
                  :href="item.filePath"
                  :download="item.name"
                  v-text="item.name"
                ></a>
              </li>
            </ul>
          </div>
          <el-table
            max-height="340px"
            :data="tableList"
            style="width: 100%"
            :summary-method="getSummaries"
            show-summary
          >
            <el-table-column label="品牌">
              <template slot-scope="scopr">
                <div v-text="scopr.row.brandName"></div>
              </template>
            </el-table-column>
            <el-table-column label="品名">
              <template slot-scope="scopr">
                <div v-text="scopr.row.comname"></div>
              </template>
            </el-table-column>
            <el-table-column label="规格型号">
              <template slot-scope="scopr">
                <div v-text="scopr.row.productModelnum"></div>
              </template>
            </el-table-column>
            <el-table-column v-if="zdyName1 != ''" :label="zdyName1">
              <template slot-scope="scopr">
                <div v-text="scopr.row.ylzd1"></div>
              </template>
            </el-table-column>
            <el-table-column v-if="zdyName2 != ''" :label="zdyName2">
              <template slot-scope="scopr">
                <div v-text="scopr.row.ylzd2"></div>
              </template>
            </el-table-column>
            <el-table-column v-if="zdyName3 != ''" :label="zdyName3">
              <template slot-scope="scopr">
                <div v-text="scopr.row.ylzd3"></div>
              </template>
            </el-table-column>
            <el-table-column v-if="zdyName4 != ''" :label="zdyName4">
              <template slot-scope="scopr">
                <div v-text="scopr.row.ylzd4"></div>
              </template>
            </el-table-column>
            <el-table-column v-if="zdyName5 != ''" :label="zdyName5">
              <template slot-scope="scopr">
                <div v-text="scopr.row.ylzd5"></div>
              </template>
            </el-table-column>
            <el-table-column v-if="zdyName6 != ''" :label="zdyName6">
              <template slot-scope="scopr">
                <div v-text="scopr.row.ylzd6"></div>
              </template>
            </el-table-column>
            <el-table-column v-if="zdyName7 != ''" :label="zdyName7">
              <template slot-scope="scopr">
                <div v-text="scopr.row.ylzd7"></div>
              </template>
            </el-table-column>
            <el-table-column v-if="zdyName8 != ''" :label="zdyName8">
              <template slot-scope="scopr">
                <div v-text="scopr.row.ylzd8"></div>
              </template>
            </el-table-column>
            <el-table-column v-if="zdyName9 != ''" :label="zdyName9">
              <template slot-scope="scopr">
                <div v-text="scopr.row.ylzd9"></div>
              </template>
            </el-table-column>
            <el-table-column v-if="zdyName10 != ''" :label="zdyName10">
              <template slot-scope="scopr">
                <div v-text="scopr.row.ylzd10"></div>
              </template>
            </el-table-column>
            <el-table-column label="计量单位">
              <template slot-scope="scopr">
                <div v-text="scopr.row.measureName"></div>
              </template>
            </el-table-column>
            <el-table-column label="未税单价">
              <template slot-scope="scopr">
                <div v-text="scopr.row.wsdj"></div>
              </template>
            </el-table-column>
            <el-table-column prop="quantity" label="数量">
              <template slot-scope="scopr">
                <div v-text="scopr.row.quantity"></div>
              </template>
            </el-table-column>
            <el-table-column label="税率(%)">
              <template slot-scope="scopr">
                <div v-text="scopr.row.productSl"></div>
              </template>
            </el-table-column>
            <el-table-column prop="hsdj" label="含税单价">
              <template slot-scope="scopr">
                <div v-text="scopr.row.hsdj"></div>
              </template>
            </el-table-column>
            <el-table-column prop="sj" label="税金">
              <template slot-scope="scopr">
                <div v-text="scopr.row.sj"></div>
              </template>
            </el-table-column>
            <el-table-column prop="hk" label="货款">
              <template slot-scope="scopr">
                <div v-text="scopr.row.hk"></div>
              </template>
            </el-table-column>
            <el-table-column prop="hj" label="合计">
              <template slot-scope="scopr">
                <div v-text="scopr.row.hj"></div>
              </template>
            </el-table-column>
            <el-table-column label="摘要">
              <template slot-scope="scopr">
                <div v-text="scopr.row.zy"></div>
              </template>
            </el-table-column>
          </el-table>
          <ul class="tableButton">
            <li
              :style="{'width':width}"
              v-for="index of widthList"
              :key="index"
            >{{index == 1?'折扣后合计':index == widthList-1?from.cbzje:''}}</li>
          </ul>
        </sections>
        <div class="conditions">
          <div class="conditions-top">
            <div>
              <span>合同条款主题</span>
            </div>
            <div>合同条款内容</div>
          </div>
          <div class="conditions-center">
            <div v-for="(item,index) in crmBjdHttklList" :key="index">
              <div>
                <span v-text="item.htzt"></span>
              </div>
              <div>
                <span v-text="item.htnr"></span>
              </div>
            </div>
          </div>
        </div>
        <div class="input-box" style="margin:10px 0 0 1%">
          <label class="input-label">审核人</label>
          <div style="float:left" v-text="from.shrName"></div>
        </div>
        <div class="input-box" style="margin-top:10px">
          <label class="input-label">审核时间</label>
          <div style="float:left" v-text="from.shsj"></div>
        </div>
        <div class="input-box" style="margin:10px 0 0 1%"></div>
        <div class="input-box" style="margin:10px 0 0 1%;width:99%">
          <label class="input-label">不通过原因</label>
          <div style="float:left;width:80%" v-text="from.nopassReason"></div>
        </div>
      </div>
      <div class="handle-bar" style="margin-top:40px">
        <el-button v-if="auditStatus" type="success" @click="audit(1)">审核通过</el-button>
        <el-button v-if="auditStatus" type="info" @click="audit(2)">审核不通过</el-button>
        <el-button class="handle-button" @click.native="hidenView">关闭</el-button>
      </div>
    </flexbox>

    <el-dialog
      :modal-append-to-body="false"
      title="审核不通过原因"
      :visible.sync="auditDialog"
      width="30%"
      :before-close="handleClose"
    >
      <span>
        <el-input
          type="textarea"
          placeholder="请输入内容"
          v-model="message"
          maxlength="200"
          show-word-limit
        ></el-input>
      </span>
      <span slot="footer" class="dialog-footer">
        <el-button @click="auditDialog = false">取 消</el-button>
        <el-button type="primary" @click="auditDialogSubmit">确 定</el-button>
      </span>
    </el-dialog>
  </createView>
</template>

<script>
import createView from "../../components/createView";
import sections from "../../components/sections";
import {
  bjdQueryForAdd,
  bjdQueryDwtt,
  httkQueryTypeOfContact,
  bjdAddOrUpdate,
  bjdQueryForEdit,
  bjdCheckStatus,
} from "@/api/crm/xsbjd";
import {
  xbjQueryForAdd,
  xbjQueryCustomer,
  xbjQueryProduct,
  xbjQueryBrandTree,
  xbjAddOrUpdate,
  xbjXjdToBjd,
  xbjQueryComname,
  xbjQueryCustomerContact,
  bjdFileQueryByBjdId,
  adminYszdGetYlzdSetByType,
} from "@/api/crm/xbjTable";
import { bjdFileUpload } from "@/api/common";
import treeDlalog from "../../components/treeDlalog";
import bmDlalog from "../../components/bmDlalog";
import gxrDialog from "../../components/gxrDialog";
import Lockr from "lockr";

export default {
  name: "",
  components: {
    createView,
    sections,
    treeDlalog,
    bmDlalog,
    gxrDialog,
  },
  watch: {
    "from.zje": {
      handler() {
        this.from.cbzje = (
          Number(this.from.zje) *
          (Number(this.from.zdzk) * 0.01)
        ).toFixed(2);
      },
    },
    "from.zdzk": {
      handler() {
        this.from.cbzje = (
          Number(this.from.zje) *
          (Number(this.from.zdzk) * 0.01)
        ).toFixed(2);
      },
    },
    filterText(val) {
      this.$refs.tree.filter(val);
    },
  },
  computed: {
    wsdjComputed() {
      return (data) => {
        if (!this.wsdjCheckbox) {
          let num = 0;
          if (
            this.tableList[data.$index].hsdj != "" &&
            this.tableList[data.$index].productSl != ""
          ) {
            num = (
              this.tableList[data.$index].hsdj /
              (1 + this.tableList[data.$index].productSl * 0.01)
            ).toFixed(2);
          } else {
            num = 0;
          }
          this.tableList[data.$index].wsdj = num;
        }
      };
    },
    hsdjComputed(val) {
      return (data) => {
        if (!this.hsdjCheckbox) {
          let num = 0;
          if (
            this.tableList[data.$index].wsdj != "" &&
            this.tableList[data.$index].productSl != ""
          ) {
            num = (
              this.tableList[data.$index].wsdj *
              (1 + this.tableList[data.$index].productSl * 0.01)
            ).toFixed(2);
          } else {
            num = 0;
          }
          this.tableList[data.$index].hsdj = num;
        }
      };
    },
    sjComputed() {
      return (data) => {
        if (
          this.tableList[data.$index].wsdj != "" &&
          this.tableList[data.$index].hsdj != ""
        ) {
          this.tableList[data.$index].sj = (
            this.tableList[data.$index].hsdj - this.tableList[data.$index].wsdj
          ).toFixed(2);
        } else {
          this.tableList[data.$index].sj = 0;
        }
      };
    },
    hkComputed() {
      return (data) => {
        if (this.tableList[data.$index].wsdj != "") {
          this.tableList[data.$index].hk = this.tableList[data.$index].wsdj;
        } else {
          this.tableList[data.$index].hk = 0;
        }
      };
    },
    hjComputed() {
      return (data) => {
        if (this.tableList[data.$index].hsdj != "") {
          this.tableList[data.$index].hj = this.tableList[data.$index].hsdj;
        } else {
          this.tableList[data.$index].hj = 0;
        }
      };
    },
  },
  data() {
    return {
      filterText: "",
      brandData: [],
      defaultProps: {
        children: "children",
        label: "name",
      },
      dialogVisibleBrand: false,
      brandName: "",
      zdyName1: "",
      zdyName2: "",
      zdyName3: "",
      zdyName4: "",
      zdyName5: "",
      zdyName6: "",
      zdyName7: "",
      zdyName8: "",
      zdyName9: "",
      zdyName10: "",
      ylzdType1: "",
      ylzdType2: "",
      ylzdType3: "",
      ylzdType4: "",
      ylzdType5: "",
      ylzdType6: "",
      ylzdType7: "",
      ylzdType8: "",
      ylzdType9: "",
      ylzdType10: "",
      auditDialog: false,
      title: "",
      customersList: [],
      dialogCustomer: false,
      productList: [],
      options: [],
      props: {
        value: "name",
        label: "name",
        children: "children",
        multiple: true,
      },
      cascaderIds: [],
      tableData: [],
      customerList: [],
      quantityNum: 0,
      tableList: [
        {
          brandName: "",
          brandId: "",
          commnameId: "",
          commnameName: "",
          measureName: "",
          measureUnitid: "",
          quantity: "",
          productSl: "",
          wsdj: "",
          hsdj: "",
          sj: "",
          hk: "",
          hj: "",
          productName: "",
          productId: "",
          productModelnum: "",
          zy: "",
        },
      ],
      loading: false,
      creator: "",
      createDate: "",
      ywyName: "",
      dwttList: [],
      gdlxList: [{ name: "实单" }, { name: "重要单" }, { name: "机会单" }],
      from: {
        gdlx: "",
        jhbh: "",
        contactId: "",
        brandId: "",
        customerId: "",
        commnameId: "",
        zje: "",
        zkhZje: "",
        bjdDh: "",
        cbzje: "",
        dwtt: "",
        zdzk: "100",
        fplx: 1,
        bjr: "",
        bjrq: "",
        bjyxq: "",
        hq: "",
        contactPhone: "",
        contactName: "",
        jhrq: "",
        pricelx: "",
        remark: "",
        fzbm: "",
        bzr: "",
        bjjd: "",
        gxr: "",
        xctx: "",
        sfbd: "",
      },
      bjjdList: [
        { name: "初次报价" },
        { name: "17%" },
        { name: "二次议价" },
        { name: "执行中" },
        { name: "已结束" },
      ],
      typeofcontract: "",
      typeofcontactList: [],
      contactList: [],
      crmBjdHttklList: [],
      termsetting: {},
      fplxName: "",
      fplxList: [
        {
          name: "增值税发票",
          id: 1,
        },
        {
          name: "普通发票",
          id: 2,
        },
        {
          name: "收据",
          id: 3,
        },
      ],
      brandName: "",
      customerName: "",
      customerId: "",
      dialogVisible: false,
      customerVisible: false,
      dialogFrom: {
        page: 1,
        limit: 15,
        name: "",
        code: "",
      },
      customerFrom: {
        page: 1,
        limit: 15,
        brandName: "",
        productModelnum: "",
        productName: "",
      },
      total: 0,
      selectionList: [],
      customerIndex: "",
      wsdjCheckbox: false,
      hsdjCheckbox: true,
      combinedList: [],
      message: "",
      fileList: [],
      dialogStatus: false,
      bmDialogStatus: false,
      fzbmName: "",
      treeId: "",
      bjrName: "",
      bmName: "",
      gxrName: "",
      gxrDialogStatus: false,
      ylzdList: [],
      dwttName: "",
      auditStatus: false,
      width: "",
      widthList: 0,
    };
  },
  methods: {
    queryPhoneChage(val) {
      for (var i in this.contactList) {
        if (this.contactList[i].contactId == val) {
          this.from.contactPhone = this.contactList[i].contactPhone;
        }
      }
    },
    changeTree() {
      this.brandName = "";
      let data = this.$refs.tree.getCheckedNodes();
      let arr = [];
      for (var i in data) {
        this.brandName += "," + data[i].name;
        arr.push(data[i].id);
      }
      this.customerFrom.brandName = arr.join(",");
      this.dialogVisibleBrand = false;
    },
    filterNode(value, data) {
      if (!value) return true;
      return data.name.indexOf(value) !== -1;
    },
    handleCloseBrand() {
      this.dialogVisibleBrand = false;
      this.customerFrom.brandName = "";
      this.brandName = "";
    },
    brandIdClick() {
      this.dialogVisibleBrand = true;
    },
    deleteUpload(index) {
      this.fileList.splice(index, 1);
    },
    /** 图片选择出发 */
    xhUploadFile(event) {
      var files = event.target.files;
      if (files.length > 5) {
        this.msgInfo("最多支持上传5个文件");
        return;
      } else {
        if (files.length > 0) {
          var self = this;
          for (let index = 0; index < files.length; index++) {
            const file = files[index];
            this.sendFileRequest(file);
          }
        }
      }
    },
    sendFileRequest(file, result) {
      var params = { file: file };
      bjdFileUpload(params)
        .then((res) => {
          if (this.fileList.length > 4) {
            return;
          }
          this.fileList.push({
            name: res.name,
            fileId: res.fileId,
          });
        })
        .catch(() => {});
    },
    handleCloseAudit() {
      this.auditDialog = false;
    },
    auditDialogSubmit() {
      bjdCheckStatus({
        bjdId: this.widowData.id,
        type: 2,
        message: this.message,
      })
        .then((res) => {
          this.auditDialog = false;
          this.loading = true;
          this.$message({
            message: "操作成功",
            type: "success",
            onClose: () => {
              this.resetGetList();
              this.hidenView();
              this.loading = false;
            },
          });
        })
        .catch((res) => {
          this.loading = false;
        });
    },
    audit(val) {
      let self = this;
      if (val == 1) {
        this.$confirm("请确认审核信息, 是否继续?", "提示", {
          confirmButtonText: "确定",
          cancelButtonText: "取消",
          type: "warning",
        })
          .then(() => {
            bjdCheckStatus({
              bjdId: this.widowData.id,
              type: val,
              message: this.message,
            })
              .then((res) => {
                this.loading = true;
                this.$message({
                  message: "审核通过",
                  type: "success",
                  onClose: () => {
                    this.resetGetList();
                    this.hidenView();
                    this.loading = false;
                  },
                });
              })
              .catch((res) => {
                this.loading = false;
              });
          })
          .catch(() => {
            this.msgInfo("取消审核");
          });
      } else {
        this.auditDialog = true;
      }
    },
    customersIdClick(item) {
      this.customerName = item.name;
      this.from.customerId = item.customerId;
      this.contactList = item.contactList;
      this.from.contactId = item.contactList[0].contactId;
      this.dialogCustomer = false;
    },
    dwttChange(val) {
      let saleZzsl = 0;
      for (var i in this.dwttList) {
        if (this.dwttList[i].id == val) {
          saleZzsl = this.dwttList[i].saleZzsl;
        }
      }
      for (var i in this.tableList) {
        this.tableList[i].productSl = saleZzsl;
      }
    },
    getSummaries(param) {
      const { columns, data } = param;
      const sums = [];
      columns.forEach((column, index) => {
        if (index === 0) {
          sums[index] = "合计";
          return;
        }
        const values = data.map((item) => Number(item[column.property]));
        if (!values.every((value) => isNaN(value))) {
          sums[index] = values
            .reduce((prev, curr) => {
              const value = Number(curr);
              if (!isNaN(value)) {
                return prev + curr;
              } else {
                return prev;
              }
            }, 0)
            .toFixed(2);
          sums[index];
        } else {
          sums[index] = "";
        }
      });
      this.combinedList = sums;
      this.from.zje = sums[10];
      return sums;
    },
    quantity(row) {
      if (row.brandName == "") {
        this.msgInfo("请选择商品");
      }
    },
    resetGetList() {
      window.opener.postMessage("child", window.location);
    },
    hidenView() {
      window.top.close();
    },
    search() {
      this.dialogData();
    },
    customerSearch() {
      this.customerData();
    },
    customerReset() {
      this.customerFrom.page = 1;
      this.customerFrom.limit = 15;
      this.cascaderIds = [];
      this.customerFrom.brandName = "";
      this.customerFrom.productModelnum = "";
      this.customerFrom.productModelnum = "";
      this.customerData();
    },
    reset() {
      this.dialogFrom.page = 1;
      this.dialogFrom.limit = 15;
      this.dialogFrom.name = "";
      this.dialogFrom.code = "";
      this.dialogData();
    },
    queryName(data) {
      this.from.commnameId = data.comnameId;
      this.contactList = data.contactList;
      this.from.contactId = data.contactList[0].contactId;
      this.dialogVisible = false;
      this.customerName = data.name;
      this.from.customerId = data.customerId;
      this.from.bjr = data.ywyId;
      this.customerId = data.customerId;
      this.from.contactName = data.contactName;
      this.from.contactPhone = data.contactList[0].contactPhone;
    },
    customerClick(data) {
      this.customerVisible = false;
      this.tableList[this.customerIndex].brandName = data.brandName;
      this.tableList[this.customerIndex].brandId = data.brandId;
      this.tableList[this.customerIndex].commnameId = data.comnameId;
      this.tableList[this.customerIndex].commnameName = data.comnameName;
      this.tableList[this.customerIndex].measureName = data.measureName;
      this.tableList[this.customerIndex].measureUnitid = data.measureUnitid;
      this.tableList[this.customerIndex].productName = data.productName;
      this.tableList[this.customerIndex].productId = data.productId;
      this.tableList[this.customerIndex].productModelnum = data.productModelnum;
    },
    productChange(val, id) {
      for (var i in this.productList) {
        if (this.productList[i].id == id) {
          val.gs = Number(this.productList[i].tariff.replace("%", ""));
        }
      }
    },
    handleCloseCustomer() {
      this.dialogCustomer = false;
    },
    handleClose() {
      this.auditDialog = false;
    },
    handleCloseVisible() {
      this.customerVisible = false;
    },
    dialogData() {
      xbjQueryCustomer(this.dialogFrom)
        .then((res) => {
          this.tableData = res.data.list;
          this.total = res.data.totalRow;
        })
        .catch((res) => {});
    },
    dialog() {
      this.dialogVisible = true;
      this.dialogData();
    },
    customerData() {
      xbjQueryProduct(this.customerFrom)
        .then((res) => {
          this.customerList = res.data.list;
        })
        .catch((res) => {});
    },
    customerCliuck(val) {
      this.customerIndex = val;
      this.customerVisible = true;
      this.customerData();
      xbjQueryBrandTree()
        .then((res) => {
          this.brandData = res.data;
        })
        .catch((res) => {});
    },
    typeofcontactChange(val) {
      this.crmBjdHttklList = this.termsetting[val];
    },
    queryData() {
      let self = this;
      adminYszdGetYlzdSetByType({
        type: 1,
      })
        .then((res) => {
          this.ylzdList = res.data;
          for (var i in this.tableList) {
            for (var k in res.data) {
              this.$set(this.tableList[i], res.data[k].ylzdName, "");
            }
          }
          for (var i in res.data) {
            let num = res.data[i].ylzdName.substring(
              res.data[i].ylzdName.indexOf("d") + 1,
              res.data[i].ylzdName.length
            );
            if (num == "1") {
              this.zdyName1 = res.data[i].zdyName;
              this.ylzdType1 = res.data[i].from;
            } else if (num == "2") {
              this.zdyName2 = res.data[i].zdyName;
              this.ylzdType2 = res.data[i].from;
            } else if (num == "3") {
              this.zdyName3 = res.data[i].zdyName;
              this.ylzdType3 = res.data[i].from;
            } else if (num == "4") {
              this.zdyName4 = res.data[i].zdyName;
              this.ylzdType4 = res.data[i].from;
            } else if (num == "5") {
              this.zdyName5 = res.data[i].zdyName;
              this.ylzdType5 = res.data[i].from;
            } else if (num == "6") {
              this.zdyName6 = res.data[i].zdyName;
              this.ylzdType6 = res.data[i].from;
            } else if (num == "7") {
              this.zdyName7 = res.data[i].zdyName;
              this.ylzdType7 = res.data[i].from;
            } else if (num == "8") {
              this.zdyName8 = res.data[i].zdyName;
              this.ylzdType8 = res.data[i].from;
            } else if (num == "9") {
              this.zdyName9 = res.data[i].zdyName;
              this.ylzdType9 = res.data[i].from;
            } else if (num == "10") {
              this.zdyName10 = res.data[i].zdyName;
              this.ylzdType10 = res.data[i].from;
            }
          }
        })
        .catch((res) => {});
      xbjQueryComname()
        .then((res) => {
          this.productList = res.data;
        })
        .catch((res) => {});
      httkQueryTypeOfContact({ lx: 4 })
        .then((res) => {
          this.typeofcontactList = res.data;
          this.typeofcontract = res.data[0].id;
        })
        .catch((res) => {});
      bjdFileQueryByBjdId({
        bjdId: this.widowData.id,
      })
        .then((res) => {
          this.fileList = res.data;
        })
        .catch((res) => {});
      bjdQueryForEdit({
        bjdId: this.widowData.id,
      })
        .then((res) => {
          this.wsdjCheckbox = false;
          this.hsdjCheckbox = true;
          this.tableList = res.data.djmxList;
          this.dwttName = res.data.baseMsg[0].dwttName;
          this.from.jhrq = res.data.baseMsg[0].jhrq;
          this.customerName = res.data.baseMsg[0].customerName;
          this.from.customerId = res.data.baseMsg[0].customerId;
          this.from.createDate = res.data.baseMsg[0].createDate;
          this.from.bjdId = res.data.baseMsg[0].bjdId;
          this.from.jhbh = res.data.baseMsg[0].jhbh;
          this.from.bjdDh = res.data.baseMsg[0].bjdDh;
          this.from.hq = res.data.baseMsg[0].hq;
          this.from.remark = res.data.baseMsg[0].bjdRemark;
          this.from.gdlx = res.data.baseMsg[0].gdlx;
          this.termsetting = res.data.httkList;
          this.ywyName = res.data.baseMsg[0].creatorName;
          this.from.contactName = res.data.baseMsg[0].contactName;
          this.from.contactPhone = res.data.baseMsg[0].contactPhone;
          this.bjrName = res.data.baseMsg[0].bjrName;
          this.creator = res.data.baseMsg[0].creatorName;
          this.from.shrName = res.data.baseMsg[0].shrName;
          this.from.shsj = res.data.baseMsg[0].shsj;
          this.from.nopassReason = res.data.baseMsg[0].nopassReason;
          this.fzbmName =
            res.data.baseMsg[0].fzbmName == ""
              ? ""
              : res.data.baseMsg[0].fzbmName
                  .map((res) => {
                    return res.name;
                  })
                  .join(",");
          this.from.hq = res.data.baseMsg[0].hq;
          this.from.gxrName =
            res.data.baseMsg[0].gxrName == ""
              ? ""
              : res.data.baseMsg[0].gxrName
                  .map((res) => {
                    return res.realname;
                  })
                  .join(",");
          this.from.bjjd = res.data.baseMsg[0].bjjd;
          this.from.xctx = res.data.baseMsg[0].xctx;
          this.from.xsjh = res.data.baseMsg[0].xsjh;
          this.from.zdzk = res.data.baseMsg[0].zdzk;
          this.from.sfbd = res.data.baseMsg[0].sfbd;
          for (var i in this.fplxList) {
            if (this.fplxList[i].id == res.data.baseMsg[0].fplx) {
              this.fplxName = this.fplxList[i].name;
            }
          }
          this.from.dwtt = res.data.baseMsg[0].dwtt;
          setTimeout(() => {
            this.crmBjdHttklList = res.data.httkList[this.typeofcontract];
          }, 300);
          if (res.data.baseMsg[0].pricelx == 1) {
            this.wsdjCheckbox = true;
            this.hsdjCheckbox = false;
          } else {
            this.hsdjCheckbox = true;
            this.wsdjCheckbox = false;
          }
        })
        .catch((res) => {});
    },
    customerAdd() {
      this.customerVisible = false;
      for (var i in this.selectionList) {
        this.tableList[Number(i) + this.customerIndex] = Object.assign(
          {},
          this.selectionList[i]
        );
        this.$set(this.tableList, i, this.tableList[i]);
      }
    },
    handleSizeChange(val) {
      this.dialogFrom.limit = val;
      this.dialogData();
    },
    handleCurrentChange(val) {
      this.dialogFrom.page = val;
      this.dialogData();
    },
    handleSizeChangeA(val) {
      this.customerFrom.limit = val;
      this.customerData();
    },
    handleCurrentChangeA(val) {
      this.customerFrom.page = val;
      this.customerData();
    },
    handleSelectionChange(val) {
      this.selectionList = val;
    },
    deletClick(val) {
      this.tableList.splice(val, 1);
    },
    appendClick() {
      this.tableList.push({
        brandName: "",
        brandId: "",
        comnameId: "",
        commnameName: "",
        quantity: "",
        productName: "",
        productId: "",
        productModelnum: "",
        productSl: "",
        wsdj: "",
        hsdj: "",
        sj: "",
        hk: "",
        hj: "",
      });
    },
    deleteHttk(index) {
      this.crmBjdHttklList.splice(index, 1);
    },
    typeofcontactClick() {
      this.crmBjdHttklList.push({
        tkzt: "",
        tknr: "",
        id: "",
      });
    },
  },

  created() {},

  mounted() {
    setTimeout(() => {
      this.width = 100 / $(".el-table__row")[0].cells.length + "%";
      this.widthList = $(".el-table__row")[0].cells.length;
    }, 300);
    this.widowData = this.$route.query;
    this.widowData.id = this.decode(this.$route.query.id);
    this.createDate = this.getTime();

    this.queryData();
    if (this.widowData.type == "audit") {
      this.auditStatus = true;
    } else {
      this.auditStatus = false;
    }
    this.from.bjrq =
      new Date().getFullYear() +
      "-" +
      (new Date().getMonth() + 1) +
      "-" +
      new Date().getDate();
    this.from.bjyxq =
      new Date().getFullYear() +
      "-" +
      (new Date().getMonth() + 1) +
      "-" +
      new Date().getDate();
  },
};
</script>
<style lang='scss' scoped>
@import "../../manage/styles/table.scss";
@import "../../../styles/detail.scss";
.conditions {
  margin-left: 20px;
  width: 98%;
  margin-left: 1%;
}
.conditions-top {
  float: left;
  div {
    text-align: center;
    border: 1px solid #999;
    background: #a3c7f1;
  }
  div:nth-child(1) {
    width: 20%;
    float: left;
    border-right: 0;
  }
  div:nth-child(2) {
    width: 80%;
    float: left;
    text-align: center;
  }
}
.conditions-center {
  div {
    float: left;
    width: 100%;
    div {
      line-height: 40px;
      text-align: center;
      border: 1px solid #999;
      span {
        margin-left: 10px;
      }
    }
    div:nth-child(1) {
      width: 20%;
      float: left;
      text-align: center;
      border-right: 0;
      border-top: 0;
    }
    div:nth-child(2) {
      width: 80%;
      float: left;
      text-align: center;
      text-align: center;
      border-top: 0;
    }
  }
}
.tableButton {
  width: 100%;
  height: 40px;
  li {
    float: left;
    height: 40px;
    line-height: 40px;
    text-align: center;
  }
}
.a-upload {
  padding: 0 10px;
  margin-top: 5px;
  height: 25px;
  line-height: 25px;
  position: relative;
  cursor: pointer;
  color: #888;
  background: #fafafa;
  border: 1px solid #ddd;
  border-radius: 4px;
  overflow: hidden;
  *display: inline;
  *zoom: 1;
  float: left;
}

.a-upload input {
  position: absolute;
  font-size: 100px;
  right: 0;
  top: 0;
  opacity: 0;
  filter: alpha(opacity=0);
  cursor: pointer;
}

.a-upload:hover {
  color: #444;
  background: #eee;
  border-color: #ccc;
  text-decoration: none;
}
.uploadStyle {
  width: 60%;
  float: left;
  line-height: 40px;
  li {
    min-width: 100px;
    float: left;
    margin: 0 5px;
  }
}
.el-icon-close {
  color: red;
  cursor: pointer;
}
</style>