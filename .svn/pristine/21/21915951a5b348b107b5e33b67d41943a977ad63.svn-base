<template>
  <createView :loading="loading" :body-style="{ height: '100%',padding:0,overflow: 'auto'}">
    <flexbox direction="column" align="stretch" class="create-container">
      <div class="create-flex">
        <sections title="基本信息">
          <div class="input-box">
            <label class="input-label">
              <span style="color:red">*</span>
              供应商名称:
            </label>
            <div
              style="float: left;overflow: hidden;white-space: nowrap"
              v-if="toViewType"
              :title="from.name"
              v-text="from.name"
            ></div>
            <el-input
              v-else
              @input="getName"
              @blur="checkName"
              clearable
              placeholder="请输入供应商名称"
              v-model.trim="from.name"
            ></el-input>
          </div>
          <div class="input-box">
            <label class="input-label">供应商编码:</label>
            <div
              style="float: left;overflow: hidden;white-space: nowrap"
              :title="from.code"
              v-if="toViewType"
              v-text="from.code"
            ></div>
            <el-input :readonly="true" v-else clearable placeholder="请输入供应商编码" v-model="from.code"></el-input>
          </div>
          <div class="input-box">
            <label class="input-label">付款期限设置:</label>
            <div
              style="display: inline-block;width:60px;float:left"
              v-if="toViewType"
              v-text="from.fkqxszFlag"
            ></div>
            <div
              style="display: inline-block;width:20px;float:left"
              v-if="toViewType"
              v-text="from.fkqxszDays"
            ></div>
            <el-radio
              v-if="!toViewType"
              style="float:left;margin:5px 5px 0 0"
              v-model="from.fkqxszFlag"
              label="收货后"
              @change="shhChage"
            >收货后</el-radio>
            <el-input
              v-if="!toViewType"
              :readonly="shReadonly"
              style="width:10%"
              clearable
              placeholder
              v-model="shData"
            ></el-input>
            <span style="line-height:25px;float:left">天为收款期限</span>
            <el-radio
              v-if="!toViewType"
              style="float:left;margin:5px 5px 0 5px"
              v-model="from.fkqxszFlag"
              label="开票后"
              @change="kphChange"
            >开票后</el-radio>
            <el-input
              v-if="!toViewType"
              :readonly="kpReadonly"
              style="width:10%"
              clearable
              placeholder
              v-model="kpData"
            ></el-input>
            <span v-if="!toViewType" style="line-height:25px">天为收款期限</span>
          </div>
          <div class="input-box">
            <label class="input-label">
              <span style="color:red">*</span>供应商类型:
            </label>
            <div v-if="toViewType" v-text="typeName"></div>
            <el-select v-else v-model="from.type" placeholder="请选择">
              <el-option
                v-for="item in typeList"
                :key="item.code"
                :label="item.name"
                :value="item.code"
              ></el-option>
            </el-select>
          </div>
          <div class="input-box">
            <label class="input-label">
              <span style="color:red">*</span>采购员:
            </label>
            <div v-if="toViewType" v-text="cgyName"></div>
            <el-input v-else :readonly="true" clearable placeholder="请选择采购员" v-model="cgyName">
              <el-button @click="ywyDialog" slot="append" icon="el-icon-plus"></el-button>
            </el-input>
          </div>
          <div class="input-box">
            <label class="input-label">电话:</label>
            <div v-if="toViewType" v-text="from.businessTele"></div>
            <el-input v-else clearable placeholder="请输入电话" v-model="from.businessTele"></el-input>
          </div>
          <div class="input-box">
            <label class="input-label">所在国家:</label>
            <div v-if="toViewType" v-text="from.szgj"></div>
            <el-input v-else clearable placeholder="请输入所在国家" v-model="from.szgj"></el-input>
          </div>
          <div class="input-box">
            <label class="input-label">传真:</label>
            <div v-if="toViewType" v-text="from.fax"></div>
            <el-input v-else clearable placeholder="请输入传真" v-model="from.fax"></el-input>
          </div>
          <div class="input-box">
            <label class="input-label">所在省:</label>
            <div v-if="toViewType" v-text="from.szsf"></div>
            <el-select v-else v-model="from.szsf" placeholder="请选择" @change="provinceChanged">
              <el-option :key="''" :label="'请选择'" :value="''"></el-option>
              <el-option
                v-for="item in provinces"
                :key="item.name"
                :label="item.name"
                :value="item.name"
              ></el-option>
            </el-select>
          </div>
          <div class="input-box">
            <label class="input-label">网址:</label>
            <div v-if="toViewType" v-text="from.website"></div>
            <el-input v-else clearable placeholder="请输入网址" v-model="from.website"></el-input>
          </div>
          <div class="input-box">
            <label class="input-label">所在市:</label>
            <div v-if="toViewType" v-text="from.szcs"></div>
            <el-select v-else v-model="from.szcs" :loading="loadingCity" placeholder="请选择">
              <el-option :key="''" :label="'请选择'" :value="''"></el-option>
              <el-option
                v-for="item in cities"
                :key="item.name"
                :label="item.name"
                :value="item.name"
              ></el-option>
            </el-select>
          </div>
          <div class="input-box">
            <label class="input-label">开户行:</label>
            <div v-if="toViewType" v-text="from.khyh"></div>
            <el-input v-else clearable placeholder="请输入开户行" v-model="from.khyh"></el-input>
          </div>
          <div class="input-box">
            <label class="input-label">地址:</label>
            <div v-if="toViewType" v-text="from.address"></div>
            <el-input v-else clearable placeholder="请输入地址" v-model="from.address"></el-input>
          </div>
          <div class="input-box">
            <label class="input-label">账号:</label>
            <div v-if="toViewType" v-text="from.khzh"></div>
            <el-input v-else clearable placeholder="请输入账号" v-model="from.khzh"></el-input>
          </div>
          <div class="input-box">
            <label class="input-label">邮政编码:</label>
            <div v-if="toViewType" v-text="from.postcode"></div>
            <el-input v-else clearable placeholder="请输入开户行" v-model="from.postcode"></el-input>
          </div>
          <div class="input-box">
            <label class="input-label">税号:</label>
            <div v-if="toViewType" v-text="from.sh"></div>
            <el-input v-else clearable placeholder="请输入税号" v-model="from.sh"></el-input>
          </div>
          <div class="input-box">
            <label class="input-label">法定代表人:</label>
            <div v-if="toViewType" v-text="from.fddbr"></div>
            <el-input v-else clearable placeholder="请输入法定代表人" v-model="from.fddbr"></el-input>
          </div>
          <div class="input-box">
            <label class="input-label">委托代理人:</label>
            <div v-if="toViewType" v-text="from.wtdlr"></div>
            <el-input v-else clearable placeholder="请输入委托代理人" v-model="from.wtdlr"></el-input>
          </div>
          <div class="input-box">
            <label class="input-label">共享人:</label>
            <div
              v-if="toViewType"
            >{{from.gxrName == ''?'':from.gxrName.map(res => {return res.realname}).join(',')}}</div>
            <el-input v-else :readonly="true" clearable placeholder="请选择共享人" v-model="gxrName">
              <el-button @click="gxrDialog" slot="append" icon="el-icon-plus"></el-button>
            </el-input>
          </div>
          <div class="input-box">
            <label class="input-label">对应客户:</label>
            <div v-if="toViewType" v-text="customerName"></div>
            <el-input v-else clearable placeholder="请输入对应客户" v-model="customerName">
              <el-button @click="customerDialog" slot="append" icon="el-icon-plus"></el-button>
            </el-input>
          </div>
          <div class="input-box" style="width:100%">
            <label class="input-label">上传附件</label>
            <a v-if="!toViewType" href="javascript:;" class="a-upload">
              <input multiple="multiple" @change="xhUploadFile" type="file" name id />点击这里上传文件(上限5个)
            </a>
            <ul class="uploadStyle">
              <li v-for="(item,index) in fileList" :key="index">
                <a
                  style="color:blue"
                  v-if="toViewType"
                  :href="item.filePath"
                  :download="item.name"
                >{{item.name}}</a>
                <span v-else>{{item.name}}</span>
                <i v-if="!toViewType" @click="deleteUpload(index)" class="el-icon-close"></i>
              </li>
            </ul>
          </div>
        </sections>
      </div>
      <div class="create-flex">
        <sections title="经营范围">
          <div class="input-boxB">
            <label class="input-label">经营范围:</label>
            <div v-if="toViewType" v-text="from.jyfw"></div>
            <el-input
              v-else
              resize="none"
              type="textarea"
              :rows="2"
              maxlength="200"
              show-word-limit
              placeholder="请输入备注"
              v-model="from.jyfw"
            ></el-input>
          </div>
        </sections>
      </div>
      <div class="create-flex">
        <sections title="备注">
          <div class="input-boxB">
            <label class="input-label">备注:</label>
            <div v-if="toViewType" v-text="from.remark"></div>
            <el-input
              v-else
              maxlength="200"
              show-word-limit
              resize="none"
              type="textarea"
              :rows="1"
              placeholder="请输入备注"
              v-model="from.remark"
            ></el-input>
          </div>
        </sections>
      </div>
      <div class="create-flex">
        <sections title="联系人">
          <el-table :data="tableDataLxr" style="width: 100%">
            <el-table-column label="姓名">
              <template slot="header" slot-scope="scope">
                <span>姓名</span>
                <span style="color:red">*</span>
              </template>
              <template slot-scope="scope">
                <div v-if="toViewType" v-text="scope.row.contactName"></div>
                <el-input v-else clearable v-model="scope.row.contactName"></el-input>
              </template>
            </el-table-column>
            <el-table-column label="性别">
              <template slot-scope="scope">
                <div v-if="toViewType" v-text="scope.row.contactGender == 1?'男':'女'"></div>
                <el-select v-else v-model="scope.row.contactGender" placeholder="请选择">
                  <el-option
                    v-for="item in contactGenderList"
                    :key="item.code"
                    :label="item.name"
                    :value="item.code"
                  ></el-option>
                </el-select>
              </template>
            </el-table-column>
            <el-table-column label="重要程度">
              <template slot-scope="scope">
                <div v-if="toViewType" v-text="scope.row.zycd"></div>
                <el-select v-else v-model="scope.row.zycd" placeholder="请选择">
                  <el-option
                    v-for="item in zycdList"
                    :key="item.name"
                    :label="item.name"
                    :value="item.name"
                  ></el-option>
                </el-select>
              </template>
            </el-table-column>
            <el-table-column label="职位">
              <template slot-scope="scope">
                <div v-if="toViewType" v-text="scope.row.zw"></div>
                <el-input v-else clearable v-model="scope.row.zw"></el-input>
              </template>
            </el-table-column>
            <el-table-column label="手机">
              <template slot-scope="scope">
                <div v-if="toViewType" v-text="scope.row.sj"></div>
                <el-input
                  maxlength="11"
                  @keyup.native="scope.row.sj = scope.row.sj.replace(/[^\d]/g,'')"
                  v-else
                  clearable
                  v-model="scope.row.sj"
                ></el-input>
              </template>
            </el-table-column>
            <el-table-column label="工作电话">
              <template slot-scope="scope">
                <div v-if="toViewType" v-text="scope.row.contactPhone"></div>
                <el-input v-else clearable v-model="scope.row.contactPhone"></el-input>
              </template>
            </el-table-column>
            <el-table-column label="E-mail">
              <template slot="header" slot-scope="scope">
                <span>E-mail</span>
                <span style="color:red">*</span>
              </template>
              <template slot-scope="scope">
                <div v-if="toViewType" v-text="scope.row.contactEmail"></div>
                <el-input
                  @blur="contactEmailInput(scope.row)"
                  v-else
                  clearable
                  v-model="scope.row.contactEmail"
                ></el-input>
              </template>
            </el-table-column>
            <el-table-column label="QQ">
              <template slot-scope="scope">
                <div v-if="toViewType" v-text="scope.row.contactQq"></div>
                <el-input
                  @keyup.native="scope.row.contactQq = scope.row.contactQq.replace(/[^\d]/g,'')"
                  v-else
                  clearable
                  v-model="scope.row.contactQq"
                ></el-input>
              </template>
            </el-table-column>
            <el-table-column label="传真">
              <template slot-scope="scope">
                <div v-if="toViewType" v-text="scope.row.fax"></div>
                <el-input v-else clearable v-model="scope.row.fax"></el-input>
              </template>
            </el-table-column>
            <el-table-column label="生日">
              <template slot-scope="scope">
                <div v-if="toViewType" v-text="scope.row.contactBirthday"></div>
                <el-date-picker
                  v-else
                  value-format="yyyy-MM-dd"
                  v-model="scope.row.contactBirthday"
                  type="date"
                  placeholder="选择日期"
                ></el-date-picker>
              </template>
            </el-table-column>
            <el-table-column label="备注">
              <template slot-scope="scope">
                <div v-if="toViewType" v-text="scope.row.remark"></div>
                <el-input v-else clearable v-model="scope.row.remark"></el-input>
              </template>
            </el-table-column>
            <el-table-column label="操作">
              <template slot-scope="scope">
                <el-button
                  v-if="scope.$index != 0"
                  style="color:red"
                  @click="deleteTable(scope)"
                  type="text"
                >删除</el-button>
              </template>
            </el-table-column>
          </el-table>
        </sections>
      </div>
      <div class="handle-bar">
        <el-button v-if="!toViewType" icon="el-icon-plus" @click="appendClick" type="text">添加一行</el-button>
        <el-button v-if="!toViewType" type="success" @click="successClick">保存</el-button>
        <el-button @click="hidenView" type="info">关闭</el-button>
      </div>
      <!-- 采购员 -->
      <treeDlalog
        @dialogTreeData="treedelog"
        @close="treedialogVisible = false"
        :dialogStatus="treedialogVisible"
      ></treeDlalog>

      <!-- 共享人 -->
      <gxrDialog
        @gxrDialogTreeData="gxrDialogTreeData"
        @close="gxrDialogStatus = false"
        :gxrDialogStatus="gxrDialogStatus"
      ></gxrDialog>
      <!-- 客户 -->
      <khDialog @hkDialog="hkDialog" @colse="dialogVisible = false" :dialogVisible="dialogVisible"></khDialog>
    </flexbox>
  </createView>
</template>

<script>
import createView from "../../components/createView";
import sections from "../../components/sections";
import dataList from "../../components/Json";
import {
  deptQueryDeptTreeAndUser,
  roleQueryRoleAndUser,
} from "@/api/crm/ggkhc";
import {
  crmGysAddOrUpdate,
  crmGysValidateName,
  crmGysFileAQueryByGysId,
  crmGysQueryById,
  crmGysQueryEditById,
} from "@/api/crm/gysxx";
import { xbjQueryCustomer } from "@/api/crm/xbjTable";
import { usersList, crmGysFileUpload } from "@/api/common";
import Lockr from "lockr";
import treeDlalog from "../../components/treeDlalog";
import gxrDialog from "../../components/gxrDialog";
import khDialog from "../../components/khDialog";

export default {
  name: "",
  components: {
    createView,
    sections,
    treeDlalog,
    gxrDialog,
    khDialog,
  },
  data() {
    return {
      defaultProps: {
        label: "name",
        children: "children",
      },
      defaultPropsR: {
        label: "roleName",
        children: "user",
      },
      treedialogVisible: false,
      gxrDialogStatus: false,
      dialogVisible: false,
      treeData: [],
      treeDataR: [],
      activeName: "department",
      loadingCity: false,
      provinces: [],
      cities: [],
      cgyName: "",
      gxrName: "",
      shData: "",
      kpData: "",
      radio: "",
      toViewType: false,
      typeList: [
        { name: "德语类", code: 1 },
        { name: "英语类", code: 2 },
        { name: "中文类", code: 3 },
        { name: "中英类", code: 4 },
      ],
      tableDataLxr: [
        {
          contactName: "",
          contactGender: "",
          zw: "",
          sj: "",
          contactPhone: "",
          contactEmail: "",
          contactQq: "",
          fax: "",
          contactBirthday: "",
          remark: "",
          zycd: "",
        },
      ],
      from: {
        gysId: "", //	主键，供应商ID
        name: "", //应商名称
        code: "", //供应商编码
        fkqxszFlag: "", //	收货后开票后
        fkqxszDays: "", //付款期限设置 天数
        type: "", //	供应商类型：1德语类 2英语类  3中文 4中英（用于选择邮件模板）
        cgy: "", //	采购员
        businessTele: "", //	电话
        szgj: "", //	varchar所在国家
        fax: "", //	传真
        szsf: "", //	所在省份
        szcs: "", //	所在城市
        website: "", //	网址
        khyh: "", //	开户行
        khzh: "", //	账号
        postcode: "", //	邮政编码
        sh: "", //	税号
        fddbr: "", //	法定代表人
        wtdlr: "", //	委托代理人
        customer: "", //	客户
        gxr: "", //共享人
        jyfw: "", //	经营范围
        email: "", //	邮箱
        address: "", //	地址
        description: "", //	供应商描述
      },
      customerName: "",
      loading: false,
      dialogYwy: false,
      dialogGxr: false,
      realtableData: [],
      realStatusList: [],
      realname: "",
      realStatus: "1",
      realStatusList: [
        { name: "在职", id: "1" },
        { name: "离职", id: "0" },
      ],
      contactGenderList: [
        { name: "男", code: "1" },
        { name: "女", code: "2" },
      ],
      zycdList: [
        { name: "关键联系人" },
        { name: "重要联系人" },
        { name: "普通联系人" },
        { name: "一般联系人" },
        { name: "特别联系人" },
        { name: "主管" },
      ],
      realRadio: "",
      fileList: [],
      tableData: [],
      total: 0,
      kpReadonly: true,
      shReadonly: true,
    };
  },

  methods: {
    checkName() {
      crmGysValidateName({
        name:this.from.name
      })
        .then((res) => {})
        .catch((res) => {
          this.from.name = ''
          this.from.code = ''
        });
    },
    treedelog(id, name) {
      this.from.cgy = id;
      this.cgyName = name;
    },
    gxrDialogTreeData(id, name) {
      this.from.gxr = id;
      this.gxrName = name;
    },
    hkDialog(name, id) {
      this.customerName = name;
      this.from.customer = id;
    },
    contactEmailInput(row) {
      var reg = /^([a-zA-Z]|[0-9])(\w|\-)+@[a-zA-Z0-9]+\.([a-zA-Z]{2,4})$/;
      if (reg.test(row.contactEmail)) {
      } else {
        row.contactEmail = "";
        this.msgInfo("邮箱格式不正确");
      }
    },
    deleteTable(scope) {
      this.tableDataLxr.splice(scope.$index, 1);
    },
    shhChage() {
      this.kpData = "";
      this.kpReadonly = true;
      this.shReadonly = false;
    },
    kphChange() {
      this.shData = "";
      this.shReadonly = true;
      this.kpReadonly = false;
    },
    customerDialog() {
      this.dialogVisible = true;
    },
    gxrDialog() {
      this.gxrDialogStatus = true;
    },
    appendClick() {
      this.tableDataLxr.push({
        contactName: "",
        contactGender: "",
        zw: "",
        sj: "",
        contactPhone: "",
        contactEmail: "",
        contactQq: "",
        fax: "",
        contactBirthday: "",
        remark: "",
        zycd: "",
      });
    },
    deleteUpload(index) {
      this.fileList.splice(index, 1);
    },
    /** 图片选择出发 */
    xhUploadFile(event) {
      var files = event.target.files;
      if (files.length > 5) {
        this.msgInfo("最多支持上传5个文件");
        return;
      } else {
        if (files.length > 0) {
          var self = this;
          for (let index = 0; index < files.length; index++) {
            const file = files[index];
            this.sendFileRequest(file);
          }
        }
      }
    },
    sendFileRequest(file, result) {
      var params = { file: file };
      crmGysFileUpload(params)
        .then((res) => {
          if (this.fileList.length > 4) {
            return;
          }
          this.fileList.push({
            name: res.name,
            fileId: res.fileId,
          });
        })
        .catch(() => {});
    },
    successClick() {
      let self = this;
      if (this.from.name == "") {
        this.msgInfo("请输入供应商名称");
        return;
      }
      if (this.from.type == "") {
        this.msgInfo("请选择供应商类型");
        return;
      }
      if (this.from.cgy == "") {
        this.msgInfo("请选择采购员");
        return;
      }
      for (var i in this.tableDataLxr) {
        if (this.tableDataLxr[i].contactName == "") {
          this.msgInfo("请输入联系人姓名");
          return;
        }
        if (this.tableDataLxr[i].contactEmail == "") {
          this.msgInfo("请输入联系人E-mail");
          return;
        }
      }
      if (this.from.fkqxszFlag == "收货后") {
        this.from.fkqxszDays = this.shData;
      } else {
        this.from.fkqxszDays = this.kpData;
      }
      let arr = [];
      for (var i in this.fileList) {
        arr.push(this.fileList[i].fileId);
      }
      this.from.fileIds = arr.join(",");
      this.from.crmGysContactList = this.tableDataLxr;
      crmGysAddOrUpdate(this.from)
        .then((res) => {
          if (this.widowData.type == "add") {
            this.loading = true;
            this.message("新增成功");
          } else {
            this.loading = true;
            this.message("编辑成功");
          }
        })
        .catch((res) => {
          this.loading = false;
        });
    },
    message(val) {
      this.$message({
        message: val,
        type: "success",
        onClose: () => {
          this.resetGetList();
          this.hidenView();
          this.loading = false;
        },
      });
    },
    resetGetList() {
      window.opener.postMessage("child", window.location);
    },
    hidenView() {
      window.top.close();
    },
    ywyDialog() {
      this.treedialogVisible = true;
    },
    dialogUserTree() {
      roleQueryRoleAndUser()
        .then((res) => {
          this.treeDataR = res.data;
          for (var i in this.treeDataR) {
            for (var k in this.treeDataR[i].user) {
              this.treeDataR[i].user[k].roleName = this.treeDataR[i].user[
                k
              ].realname;
              this.treeDataR[i].user[k].id =
                this.treeDataR[i].user[k].roleId +
                "" +
                this.treeDataR[i].user[k].userId;
            }
          }
        })
        .catch((res) => {});
    },
    duakigReal() {
      usersList({
        page: 1,
        limit: 15,
        realname: this.realname,
        status: this.realStatus,
      })
        .then((res) => {
          this.realtableData = res.data.list;
        })
        .catch((res) => {});
    },
    getName(val) {
      var easyName = pinyin.getCamelChars(val);
      this.from.code = easyName.toUpperCase();
    },
    //省市联动选择
    provinceChanged(value) {
      this.from.szcs = "";
      if (value !== "") {
        this.loadingCity = true;
        for (var item of this.provinces) {
          if (item.name === value) {
            this.cities = item.cities;
            this.city = "";
            this.loadingCity = false;
            break;
          } else {
            continue;
          }
        }
      } else {
        this.cities = [];
        this.city = "";
      }
      this.$emit("selectChange", this.province, this.city);
    },
    editData() {
      crmGysQueryEditById({
        gysId: this.widowData.id,
      })
        .then((res) => {
          this.from = res.data;
          this.tableDataLxr = res.data.CrmGysContactList;
          this.gxrName =
            res.data.gxrName == ""
              ? ""
              : res.data.gxrName
                  .map((res) => {
                    return res.realname;
                  })
                  .join(",");
          this.cgyName = res.data.cgyName;
          this.customerName = res.data.customerName;
          for (var i in this.typeList) {
            if (this.typeList[i].code == res.data.type) {
              this.typeName = this.typeList[i].name;
            }
          }
          if (res.data.fkqxszFlag == "收货后") {
            this.shData = res.data.fkqxszDays;
            this.shReadonly = false;
          } else {
            this.kpData = res.data.fkqxszDays;
            this.kpReadonly = false;
          }
        })
        .catch((res) => {});
      crmGysFileAQueryByGysId({
        gysId: this.widowData.id,
      })
        .then((res) => {
          this.fileList = res.data;
        })
        .catch((res) => {});
    },
  },

  created() {},

  mounted() {
    this.provinces = dataList.addrs.provinces;
    this.widowData = this.$route.query;
    this.widowData.id = this.decode(this.$route.query.id);
    this.cgyName = Lockr.get("loginUserInfo").realname;
    this.from.cgy = Lockr.get("loginUserInfo").userId;
    if (this.widowData.type == "edit") {
      this.editData();
    }
    if (this.widowData.type == "lookCard") {
      this.toViewType = true;
      this.editData();
    } else {
      this.toViewType = false;
    }
  },
};
</script>
<style lang='scss'>
.create-flex .el-input__inner {
  height: 25px;
}
.create-flex .el-input-group__append {
  line-height: 23px;
}
.create-flex .el-input__icon {
  line-height: 25px;
}
.el-dialog__body {
  padding-top: 0;
}
.create-flex .el-button {
  padding: 3px 12px;
}
</style>
<style lang='scss' scoped>
@import "../../manage/styles/table.scss";
@import "../../../styles/detail.scss";
.el-tab-department {
  height: 400px;
  overflow: auto;
}
.input-box {
  width: 45%;
}
.input-boxB {
  width: 100%;
  float: left;
  .input-label {
    width: 120px;
    line-height: 25px;
    float: left;
    display: block;
    text-align: left;
    color: #666;
    font-size: 14px;
  }
  .el-textarea {
    width: 90%;
    margin-bottom: 5px;
  }
}
.input-right {
  width: 35%;
  height: 300px;
  float: right;
}
.a-upload {
  padding: 0 10px;
  margin-top: 5px;
  height: 25px;
  line-height: 25px;
  position: relative;
  cursor: pointer;
  color: #888;
  background: #fafafa;
  border: 1px solid #ddd;
  border-radius: 4px;
  overflow: hidden;
  *display: inline;
  *zoom: 1;
  float: left;
}

.a-upload input {
  position: absolute;
  font-size: 100px;
  right: 0;
  top: 0;
  opacity: 0;
  filter: alpha(opacity=0);
  cursor: pointer;
}

.a-upload:hover {
  color: #444;
  background: #eee;
  border-color: #ccc;
  text-decoration: none;
}
.uploadStyle {
  width: 70%;
  float: left;
  line-height: 40px;
  li {
    min-width: 100px;
    float: left;
    margin: 0 5px;
  }
}
.el-icon-close {
  color: red;
  cursor: pointer;
}
.handle-bar {
  margin-top: 5px;
}
.createDate {
  float: left;
}
</style>