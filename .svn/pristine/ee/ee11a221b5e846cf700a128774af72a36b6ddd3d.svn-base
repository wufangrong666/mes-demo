<template>
  <createView :loading="loading" :body-style="{ height: '100%',padding:0,overflow: 'auto'}">
    <flexbox direction="column" align="stretch" class="create-container">
      <div class="create-flex">
        <sections title="认领款">
          <el-table :data="tableData" style="width: 100%">
            <el-table-column prop="yskdDh" label="预收款单号"></el-table-column>
            <el-table-column prop="customerName" label="客户名称"></el-table-column>
            <el-table-column prop="skrq" label="收款日期"></el-table-column>
            <el-table-column prop="skfs" label="收款方式"></el-table-column>
            <el-table-column prop="skje" label="收款金额"></el-table-column>
            <el-table-column prop="krlje" label="剩余金额(可认领)"></el-table-column>
            <el-table-column prop="yrlwhx" label="已认领(未核销)"></el-table-column>
            <el-table-column label="认领款">
              <template slot-scope="scope">
                <el-input @blur="rjleBlur(scope.row)" v-model="scope.row.rlje" placeholder="认领款"></el-input>
              </template>
            </el-table-column>
          </el-table>
          <div style="text-align: center;line-height: 40px;width:100%">
            <el-button type="primary" @click="submit">确定</el-button>
            <el-button type="info" @click.native="hidenView">关闭</el-button>
          </div>
        </sections>
      </div>
    </flexbox>
  </createView>
</template>

<script>
import createView from "../../components/createView";
import sections from "../../components/sections";
import {
  jxcXsddGetRlk,
  jxcXsddAddAndUpdateRlk,
  jxcXskdGetbcRlk,
} from "@/api/jxc/jxc";
export default {
  name: "",
  components: {
    createView,
    sections,
  },
  data() {
    return {
      loading: false,
      tableData: [],
      arr: [],
    };
  },
  methods: {
    submit() {
      let num = 0;
      let data = [];
      for (var i in this.tableData) {
        if (Number(this.tableData[i].krlje) < this.tableData[i].rlje) {
          this.msgInfo("认领金额不能大于剩余金额");
          return;
        } else {
          data.push({
            rlje: this.tableData[i].rlje,
            yskdId: this.tableData[i].yskdId,
            ddId: this.widowData.ddId,
            kdId: this.widowData.kdId,
            id: this.tableData[i].rlkId,
          });
        }
        num += Number(this.tableData[i].rlje);
      }
      jxcXsddAddAndUpdateRlk({ list: data })
        .then((res) => {
          for (var i in res.data) {
            if (res.data[i].id != null) {
              this.arr.push(res.data[i].id)
            }
          }
          this.$message({
            message: "认领成功",
            type: "success",
            onClose: () => {
              window.top.close();
              this.loading = false;
            },
          });
        })
        .catch((res) => {});
      setTimeout(() => {
        window.opener.postMessage(
          { type: "rlje", list: num, zdyid: this.arr.join(',') },
          window.location
        );
      }, 300);
    },
    hidenView() {
      window.top.close();
    },
    rjleBlur(row) {
      if (Number(row.krlje) < Number(row.rlje)) {
        this.msgInfo("认领金额不能大于剩余金额");
      }
    },
    queryRlkData() {
      jxcXsddGetRlk({
        customerId: this.widowData.customerId,
        ddId: this.widowData.ddId,
      })
        .then((res) => {
          for (var i in res.data) {
            let index = i;
            jxcXskdGetbcRlk({
              rlkId: res.data[i].rlkId,
            })
              .then((val) => {
                this.$set(res.data[index], "rlje", val.data.bcrlk);
              })
              .catch((res) => {});
          }
          this.tableData = res.data;
          console.log(res.data);
        })
        .catch((res) => {});
    },
  },

  created() {},

  mounted() {
    this.widowData = this.$route.query;
    this.queryRlkData();
  },
};
</script>
<style lang='scss' scoped>
</style>