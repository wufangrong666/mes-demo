<template>
  <div class="c-container">
    <!-- 标题查询 -->
    <div class="title">{{title}}</div>
    <div class="input-box">
      <label class="input-label">选择邮箱</label>
      <el-select v-model="value" placeholder="请选择">
          <el-option v-for="item in options" :key="item.id" :label="item.name" :value="item.id"></el-option>
        </el-select>
    </div>
    <div class="input-box">
      <label class="input-label">邮件主题</label>
      <el-input placeholder="可输入邮件主题包含文字" clearable v-model="from.name"></el-input>
    </div>
    <div class="input-box">
      <label class="input-label">邮件内容</label>
      <el-input placeholder="可输入邮件内容关键字" clearable v-model="from.name"></el-input>
    </div>
    <div class="input-box">
      <label class="input-label">附件名称</label>
      <el-input placeholder="请输入名称" clearable v-model="from.name"></el-input>
    </div>
    <div class="input-box">
      <el-button @click="search" type="primary">查询</el-button>
      <el-button @click="reset">重置</el-button>
    </div>

    <!-- 新增更多 -->
    <div class="right-container">
      <el-dropdown trigger="click" v-if="moreTypes.length > 0" @command="handleTypeDrop">
        <flexbox class="right-more-item">
          <div>更多</div>
          <i class="el-icon-arrow-down el-icon--right" style="color:#777;"></i>
        </flexbox>
        <el-dropdown-menu style="height:100px" slot="dropdown">
          <el-dropdown-item
            v-for="(item, index) in moreTypes"
            :key="index"
            :command="item.type"
          >{{item.name}}</el-dropdown-item>
        </el-dropdown-menu>
      </el-dropdown>
    </div>
    <el-table id="table" :height="tableHeight" :data="tableData" stripe style="width: 100%">
      <el-table-column prop="name" label="收件人"></el-table-column>
      <el-table-column prop="xjdCount" label="发件人"></el-table-column>
      <el-table-column prop="djgl" label="邮箱主题"></el-table-column>
      <el-table-column prop="bjdCount" label="附件"></el-table-column>
      <el-table-column prop="bjl" label="时间"></el-table-column>
      <el-table-column label="操作">
          <template slot-scope="scope">
              <el-button style="color:#f56c6c" type="text">删除</el-button>
          </template>
      </el-table-column>
    </el-table>
    <div class="p-contianer">
      <el-pagination
        class="p-bar"
        @size-change="handleSizeChange"
        @current-change="handleCurrentChange"
        :current-page="from.page"
        :page-sizes="pageSizes"
        :page-size.sync="from.limit"
        layout="total, sizes, prev, pager, next, jumper"
        :total="total"
      ></el-pagination>
    </div>
    <el-dialog
      title="新建邮箱"
      :visible.sync="dialogVisible"
      width="40%"
      :before-close="handleClose"
      :modal-append-to-body="false"
    >
      <div class="input-dialog">
        <label class="input-label">账户名称:</label>
        <el-input placeholder="请输入名称" clearable v-model="from.name"></el-input>
      </div>
      <div class="input-dialog">
        <label class="input-label">电子邮件地址:</label>
        <el-input placeholder="请输入电子邮件地址" clearable v-model="from.name"></el-input>
      </div>
      <div class="input-dialog">
        <label class="input-label">帐户类型:</label>
        <el-input placeholder="请输入帐户类型" clearable v-model="from.name"></el-input>
      </div>
      <div class="input-dialog">
        <label class="input-label">接收邮件服务器(pop服务器):</label>
        <el-input placeholder="请输入接收邮件服务器(pop服务器)" clearable v-model="from.name"></el-input>
      </div>
      <div class="input-dialog">
        <label class="input-label">发送邮件服务器(smtp服务器):</label>
        <el-input placeholder="发送邮件服务器(smtp服务器)" clearable v-model="from.name"></el-input>
      </div>
      <div class="input-dialog">
        <label class="input-label">登录账户名格式:</label>
        <el-select v-model="value" placeholder="请选择">
          <el-option v-for="item in options" :key="item.id" :label="item.name" :value="item.id"></el-option>
        </el-select>
      </div>
      <div class="input-dialog">
        <label class="input-label">用户名:</label>
        <el-input placeholder="请输入用户名" clearable v-model="from.name"></el-input>
      </div>
      <div class="input-dialog">
        <label class="input-label">密码啊:</label>
        <el-input placeholder="请输入密码" clearable v-model="from.name"></el-input>
      </div>
      <el-button type="primary">测试账号</el-button>
      <span slot="footer" class="dialog-footer">
        <el-button @click="dialogVisible = false">取 消</el-button>
        <el-button type="primary" @click="dialogVisible = false">确 定</el-button>
      </span>
    </el-dialog>
  </div>
</template>

<script type="text/javascript">
import { queryStatisticsQueryStatisticsByCus } from "@/api/crm/xbjTable";
export default {
  name: "yxszIndex",
  computed: {},
  data() {
    return {
      value: "",
      dialogVisible: false,
      options: [
        { name: "仅用户名", id: 1 },
        { name: "用户名@主机明", id: 2 }
      ],
      tableData: [],
      total: 0,
      tableHeight: document.documentElement.clientHeight - 194, // 表的高度
      pageSizes: [15, 30, 60, 100], //切换每页显示
      from: {
        page: 1,
        limit: 15,
        name: "",
        beginDate: "",
        endDate: ""
      },
      item: [],
      title: "",
      inputContent: "",
      /** 更多操作 */
      moreTypes: [],
      // 导入
      showImport: false
    };
  },
  mounted() {
    // 线索和客户判断更多操作
    this.moreTypes.push({ type: "enter", name: "导入" });
    this.moreTypes.push({ type: "out", name: "导出" });
    this.title = this.$route.meta.title;
    /** 控制table的高度 */
    window.onresize = () => {
      this.updateTableHeight();
    };
    this.loginData();
  },
  methods: {
    handleClose() {
      this.dialogVisible = false;
    },
    createClick() {
      this.dialogVisible = true;
    },
    //查询
    search() {
      if (this.item.length) {
        this.from.beginDate = this.item[0];
        this.from.endDate = this.item[1];
      }
      this.loginData();
    },
    reset() {
      this.from.name = "";
      this.from.page = 1;
      this.from.limit = 15;
      this.item = [];
      this.from.beginDate = "";
      this.from.endDate = "";
      this.loginData();
    },
    //获取列表数据
    loginData() {
      queryStatisticsQueryStatisticsByCus(this.from)
        .then(res => {
          this.tableData = res.data.list;
          this.total = res.data.totalRow;
        })
        .catch(res => {});
    },
    handleTypeDrop(command) {
      if (command == "out") {
        this.$emit("on-export");
      } else if (command == "enter") {
        this.showImport = true;
      }
    },
    handleSizeChange(val) {
      this.from.limit = val;
      this.loginData();
    },
    handleCurrentChange(val) {
      this.from.page = val;
      this.loginData();
    },
    /**
     * 更新表高
     */
    updateTableHeight() {
      var offsetHei = document.documentElement.clientHeight;
      var removeHeight = Object.keys(this.tableData).length > 0 ? 310 : 240;
      this.tableHeight = offsetHei - removeHeight;
    }
  }
};
</script>
<style lang="scss" scoped>
@import "../../../manage/styles/table.scss";
#table {
  border: 1px solid #e6e6e6;
}
.c-container {
  height: 60px;
  position: relative;
  z-index: 100;
  .title {
    float: left;
    padding: 0 20px;
    font-size: 18px;
    line-height: 60px;
  }
  .input-box {
    width: 275px;
    margin: 20px 0 0 35px;
    .el-date-editor {
      width: 400px;
    }
  }
  .input-dialog {
    width: 100%;
    .input-label {
      float: left;
      width: 30%;
      line-height: 40px;
    }
    .el-input {
      line-height: 40px;
      width: 60%;
    }
    .el-select {
      line-height: 40px;
      width: 60%;
    }
  }
  .right-container {
    margin-right: -10px;
    float: right;
    margin: 12px 20px 0 0;
    position: relative;
    .right-item {
      float: left;
      margin-right: 10px;
      padding: 8px 10px;
      font-size: 13px;
      border-radius: 2px;
    }

    .right-more-item {
      cursor: pointer;
      border: 1px solid #dcdfe6;
      background-color: white;
      font-size: 13px;
      color: #777;
      padding: 0 12px;
      border-radius: 2px;
      height: 31px;
    }
  }
}
</style>
