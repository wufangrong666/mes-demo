<template>
  <createView :loading="loading" :body-style="{ height: '100%',padding:0,overflow: 'auto'}">
    <flexbox direction="column" align="stretch" class="create-container">
      <div class="create-flex">
        <sections title="入库单基本信息">
          <div class="input-box">
            <label class="input-label">入库单单号：</label>
            <div style="float:left" v-text="from.rkdDh"></div>
          </div>
          <div class="input-box">
            <label class="input-label">对应单据号：</label>
            <div style="float:left" v-text="from.dydjdh"></div>
          </div>
          <div class="input-box">
            <label class="input-label">对应单据类型：</label>
            <div style="float:left" v-text="from.dydjlx"></div>
          </div>
          <div class="input-box">
            <label class="input-label">仓库：</label>
            <div v-text="from.ckName"></div>
          </div>
          <div class="input-box">
            <label class="input-label">对应单据创建人：</label>
            <div style="float:left" v-text="from.creatorName"></div>
          </div>
          <div class="input-box">
            <label class="input-label">单据创建日期：</label>
            <div v-text="from.createDate"></div>
          </div>
          <div class="input-box">
            <label class="input-label">对应单据审核人：</label>
            <div style="float:left" v-text="from.shrName"></div>
          </div>
          <div class="input-box">
            <label class="input-label">单据审核日期：</label>
            <div style="float:left" v-text="from.shsj"></div>
          </div>
          <div class="input-box">
            <label class="input-label">备注：</label>
            <div style="float:left" v-text="from.remark"></div>
          </div>
          <div class="input-box"></div>
          <div class="input-box"></div>
        </sections>
      </div>
      <div>
        <sections title="明细信息">
            <el-table
            height="400px"
            :data="tableList"
            style="width: 100%"
            :key="Math.random()"
          >
            <el-table-column label="品牌">
              <template slot-scope="scopr">
                <span v-text="scopr.row.brandName"></span>
              </template>
            </el-table-column>
            <el-table-column label="品名">
              <template slot-scope="scopr">
                <span v-text="scopr.row.commName"></span>
              </template>
            </el-table-column>
            <el-table-column label="规格型号">
              <template slot-scope="scopr">
                <span v-text="scopr.row.productModelnum"></span>
              </template>
            </el-table-column>
            <el-table-column label="预留1">
              <template slot-scope="scopr">
                <span v-text="scopr.row.ylzd1"></span>
              </template>
            </el-table-column>
            <el-table-column label="预留2">
              <template slot-scope="scopr">
                <span v-text="scopr.row.ylzd2"></span>
              </template>
            </el-table-column>
            <el-table-column label="预留3">
              <template slot-scope="scopr">
                <span v-text="scopr.row.ylzd3"></span>
              </template>
            </el-table-column>
            <el-table-column label="单据预留">
              <template slot-scope="scopr">
                <span v-text="scopr.row.ylzd2"></span>
              </template>
            </el-table-column>
            <el-table-column label="产品预留">
              <template slot-scope="scopr">
                <span v-text="scopr.row.ylzd3"></span>
              </template>
            </el-table-column>
            <el-table-column label="单位">
              <template slot-scope="scopr">
                <span v-text="scopr.row.measureName"></span>
              </template>
            </el-table-column>
            <el-table-column label="数量">
              <template slot-scope="scopr">
                <span v-text="scopr.row.quantity"></span>
              </template>
            </el-table-column>
            <el-table-column label="实际入库数量">
              <template slot-scope="scopr">
                <el-input v-if="stockStatus" v-model="scopr.row.quantity" ></el-input>
                <span v-else v-text="scopr.row.quantity"></span>
              </template>
            </el-table-column>
            <el-table-column label="摘要">
                
              <template slot-scope="scopr">
                <span v-text="scopr.row.zy"></span>
              </template>
            </el-table-column>
          </el-table>
        </sections>
        <div style="padding-left:10px">
          <div class="input-box">
            <label class="input-label">入库人</label>
            <div style="float:left" v-text="from.rkrName"></div>
          </div>
          <div class="input-box">
            <label class="input-label">入库时间</label>
            <div style="float:left" v-text="from.rksj"></div>
          </div>
          <div class="input-box">
            <label class="input-label">入库说明</label>
            <el-input v-if="stockStatus" v-model="from.rksm" ></el-input>
            <div v-else style="float:left" v-text="from.rksm"></div>
          </div>
        </div>
      </div>
      <div class="handle-bar">
        <el-button v-if="stockStatus" type="primary" @click="stockIn()">入库</el-button>
        <el-button class="handle-button" @click.native="hidenView">关闭</el-button>
      </div>
    </flexbox>
  </createView>
</template>

<script>
import createView from "@/views/components/createView";
import sections from "@/views/components/sections";
import {
  jxcQtlrkdQueryById,
  jxcQtlrkdStockIn,
} from "@/api/jxc/jxc";

import Lockr from "lockr";
export default {
  name: "",
  components: {
    createView,
    sections,
  },
  watch: {
    
  },
  computed: {
   
  },
  props: {

  },
  data() {
    return {
      loading: false,
      stockStatus: false,
      from: {
        creator: "",//创建人
        rkdDh: "",//入库单单号
        dydjdh: "",//对应单据单号
        rksj: "",//入库时间
        mustrk: "",//
        rksm: "",//入库说明
        ck: "",//仓库id
        creatorName: "",//创建人名称
        remark: "",//备注
        rkrName: "",//入库人名称
        ckName: "",//仓库名称
        rkdId: "",//入库单id
        rkr: "",//入库人
        dydjlx: "",//对应单据类型
        createDate: "",//创建时间
        shrName: "",//审核人名称
        shsj: "",//审核时间
        shr: "",//审核人id
      },
      
      tableList: [
        {
          brandName: "",//品牌名
          quantity: "",//数量
          measureUnitid: "",//单位id
          dj: "",//
          remark: "",//备注
          productModelnum: "",//规格
          measureName: "",//单位名称
          commnameId: "",//品名id
          brandId: "",//品牌id
          rkdId: "",//入库单id
          productId: "",//产品id
          rkdmxId: "",//入库单明细id
          commName: "",//品名
          je: "",//金额
          zy: "",//摘要
        }
      ],
    };
  },

  methods: {
    //关闭按钮
    hidenView() {
      window.top.close();
    },
    //点击审核
    stockIn() {
      let self = this;
        this.$confirm("确定要入库吗?", "提示", {
          confirmButtonText: "确定",
          cancelButtonText: "取消",
          type: "warning"
        })
          .then(() => {
            var data = [];
            for(var i in this.tableList){
                data.push({
                    cgydmxId: this.tableList[i].cgydmxId,
                    sfQuantity: this.tableList[i].sfQuantity
                });
            }
            jxcQtlrkdStockIn({
              cgydId: this.widowData.id,
              cksm: this.from.cksm,
              djmxList: data
            })
              .then(res => {
                this.loading = true
                this.$message({
                  message: "入库成功",
                  type: "success",
                  onClose: () => {
                    this.resetGetList();
                    this.hidenView();
                    this.loading = false;
                  }
                });
              })
              .catch(res => {});
          })
          .catch(() => {
            this.msgInfo("取消审核");
          });
    },
    //审核操作完成后，传输数据至列表页
    resetGetList() {
      window.opener.postMessage("child", window.location);
    },
    //初始化页面数据
    queryData() {
        let self = this;
        //信息
        jxcQtlrkdQueryById({
            id: this.widowData.id,
        })
            .then((res) => {
            this.tableList = res.data.rkdmxList;
            this.from = res.data;
            })
            .catch((res) => {});
      
    },
    
  },

  created() {},

  mounted() {
    this.widowData = this.$route.query;
    this.widowData.id = this.decode(this.$route.query.id);
    this.queryData();
    if (this.widowData.type == "stockIn") {
      this.stockStatus = true;
    } else {
      this.stockStatus = false;
    }
  },
};
</script>
<style lang='scss'>
.create-container .el-input__inner {
  padding-right: 0;
}
.content .el-input__inner {
  height: 25px;
}
.content .el-input__icon {
  line-height: 25px;
}
</style>
<style lang='scss' scoped>
@import "@/views/manage/styles/table.scss";
@import "@/styles/detail.scss";
.tableButton {
  width: 100%;
  line-height: 40px;
  span {
    display: inline-block;
    width: 123px;
  }
}
.a-upload {
  padding: 0 10px;
  margin-top: 5px;
  height: 20px;
  line-height: 20px;
  position: relative;
  cursor: pointer;
  color: #888;
  background: #fafafa;
  border: 1px solid #ddd;
  border-radius: 4px;
  overflow: hidden;
  *display: inline;
  *zoom: 1;
  float: left;
}

.a-upload input {
  position: absolute;
  font-size: 100px;
  right: 0;
  top: 0;
  opacity: 0;
  filter: alpha(opacity=0);
  cursor: pointer;
}

.a-upload:hover {
  color: #444;
  background: #eee;
  border-color: #ccc;
  text-decoration: none;
}
.uploadStyle {
  width: 80%;
  float: left;
  line-height: 20px;
  li {
    min-width: 100px;
    float: left;
    margin: 0 5px;
  }
}
.el-icon-close {
  color: red;
  cursor: pointer;
}
</style>