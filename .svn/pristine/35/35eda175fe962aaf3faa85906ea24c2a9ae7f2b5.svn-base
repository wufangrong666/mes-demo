<template>
  <createView :loading="loading" :body-style="{ height: '100%',padding:0,overflow: 'auto'}">
    <flexbox direction="column" align="stretch" class="create-container">
      <div class="create-flex">
        <sections title="基本信息">
          <div class="input-box">
            <label class="input-label">客户</label>
            <div style="float:left" v-text="customerName"></div>
          </div>
          <div class="input-box">
            <label class="input-label">联系人</label>
            <div style="float:left" v-text="contactName"></div>
          </div>
          <div class="input-box">
            <label class="input-label">发票类型</label>
            <div style="float:left" v-text="fplxName"></div>
          </div>
          <div class="input-box">
            <label class="input-label">销售单编号</label>
            <div style="float:left" v-text="from.xsddDh"></div>
          </div>
          <div class="input-box">
            <label class="input-label">收货地址</label>
            <div style="float:left" v-text="from.shdz"></div>
          </div>
          <div class="input-box">
            <label class="input-label">联系人电话</label>
            <div style="float:left" v-text="from.contactPhone"></div>
          </div>
          <div class="input-box">
            <label class="input-label">交货日期</label>
            <div style="float:left" v-text="from.jhrq"></div>
          </div>
          <div class="input-box">
            <label class="input-label">操作员</label>
            <div v-text="from.creatorName"></div>
          </div>
          <div class="input-box">
            <label class="input-label">备注</label>
            <div style="float:left" v-text="from.remark"></div>
          </div>
          <div class="input-box">
            <label class="input-label">业务员:</label>
            <div style="float:left" v-text="ywyName"></div>
          </div>
          <div class="input-box">
            <label class="input-label">收款期限</label>
            <div style="float:left" v-text="from.skqx"></div>
          </div>
          <div class="input-box">
            <label class="input-label">创建日期</label>
            <div v-text="createDate"></div>
          </div>
          <div class="input-box">
            <label class="input-label">货期</label>
            <div style="float:left" v-text="from.hq"></div>
          </div>
          <div class="input-box">
            <label class="input-label">单位抬头</label>
            <div style="float:left" v-text="dwttName"></div>
          </div>
          <div class="input-box">
            <label class="input-label">是否补单</label>
            <div style="float:left" v-text="from.sfbd"></div>
          </div>
          <div class="input-box">
            <label class="input-label">整单折扣(%)</label>
            <div style="float:left" v-text="from.zdzk"></div>
          </div>
          <div class="input-box">
            <label class="input-label">共享人</label>
            <div style="float:left">{{gxrName == ''?gxrName:gxrName.join(',')}}</div>
          </div>
          <div class="input-box">
            <label class="input-label">仓库</label>
            <div style="float:left" v-text="ckName"></div>
          </div>
          <div class="input-box">
            <label class="input-label">销售订单类型</label>
            <div style="float:left" v-text="from.xsddlx"></div>
          </div>
          <div class="input-box">
            <label class="input-label">跟单状态</label>
            <div style="float:left" v-text="from.gdzt"></div>
          </div>
          <div class="input-box" style="width:100%">
            <label class="input-label">上传附件</label>
            <ul class="uploadStyle">
              <li v-for="(item,index) in fileList" :key="index">
                <a
                  style="color:#409eff"
                  :href="item.filePath"
                  :download="item.name"
                  v-text="item.name"
                ></a>
              </li>
            </ul>
          </div>
          <el-table
            max-height="340px"
            :data="tableList"
            style="width: 100%"
            :summary-method="getSummaries"
            show-summary
          >
            <el-table-column label="品牌">
              <template slot-scope="scopr">
                <div style="float:left;width:100%;text-align:center" v-text="scopr.row.brandName"></div>
              </template>
            </el-table-column>
            <el-table-column label="品名">
              <template slot-scope="scopr">
                <div style="float:left;width:100%;text-align:center" v-text="scopr.row.comname"></div>
              </template>
            </el-table-column>
            <el-table-column label="规格型号">
              <template slot-scope="scopr">
                <div
                  style="float:left;width:100%;text-align:center"
                  v-text="scopr.row.productModelnum"
                ></div>
              </template>
            </el-table-column>
            <el-table-column v-if="zdyName1 != ''" :label="zdyName1">
              <template slot-scope="scopr">
                <div style="float:left;width:100%;text-align:center" v-text="scopr.row.ylzd1"></div>
              </template>
            </el-table-column>
            <el-table-column v-if="zdyName2 != ''" :label="zdyName2">
              <template slot-scope="scopr">
                <div style="float:left;width:100%;text-align:center" v-text="scopr.row.ylzd2"></div>
              </template>
            </el-table-column>
            <el-table-column v-if="zdyName3 != ''" :label="zdyName3">
              <template slot-scope="scopr">
                <div style="float:left;width:100%;text-align:center" v-text="scopr.row.ylzd3"></div>
              </template>
            </el-table-column>
            <el-table-column v-if="zdyName4 != ''" :label="zdyName4">
              <template slot-scope="scopr">
                <div style="float:left;width:100%;text-align:center" v-text="scopr.row.ylzd4"></div>
              </template>
            </el-table-column>
            <el-table-column v-if="zdyName5 != ''" :label="zdyName5">
              <template slot-scope="scopr">
                <div style="float:left;width:100%;text-align:center" v-text="scopr.row.ylzd5"></div>
              </template>
            </el-table-column>
            <el-table-column v-if="zdyName6 != ''" :label="zdyName6">
              <template slot-scope="scopr">
                <div style="float:left;width:100%;text-align:center" v-text="scopr.row.ylzd6"></div>
              </template>
            </el-table-column>
            <el-table-column v-if="zdyName7 != ''" :label="zdyName7">
              <template slot-scope="scopr">
                <div style="float:left;width:100%;text-align:center" v-text="scopr.row.ylzd7"></div>
              </template>
            </el-table-column>
            <el-table-column v-if="zdyName8 != ''" :label="zdyName8">
              <template slot-scope="scopr">
                <div style="float:left;width:100%;text-align:center" v-text="scopr.row.ylzd8"></div>
              </template>
            </el-table-column>
            <el-table-column v-if="zdyName9 != ''" :label="zdyName9">
              <template slot-scope="scopr">
                <div style="float:left;width:100%;text-align:center" v-text="scopr.row.ylzd9"></div>
              </template>
            </el-table-column>
            <el-table-column v-if="zdyName10 != ''" :label="zdyName10">
              <template slot-scope="scopr">
                <div style="float:left;width:100%;text-align:center" v-text="scopr.row.ylzd10"></div>
              </template>
            </el-table-column>
            <el-table-column label="计量单位">
              <template slot-scope="scopr">
                <div style="float:left;width:100%;text-align:center" v-text="scopr.row.measureName"></div>
              </template>
            </el-table-column>
            <el-table-column label="未税单价">
              <template slot-scope="scopr">
                <div style="float:left;width:100%;text-align:center" v-text="scopr.row.wsdj"></div>
              </template>
            </el-table-column>
            <el-table-column prop="quantity" label="数量">
              <template slot-scope="scopr">
                <div style="float:left;width:100%;text-align:center" v-text="scopr.row.quantity"></div>
              </template>
            </el-table-column>
            <el-table-column label="税率(%)">
              <template slot-scope="scopr">
                <div style="float:left;width:100%;text-align:center" v-text="scopr.row.productSl"></div>
              </template>
            </el-table-column>
            <el-table-column prop="hsdj" label="含税单价">
              <template slot-scope="scopr">
                <div style="float:left;width:100%;text-align:center" v-text="scopr.row.hsdj"></div>
              </template>
            </el-table-column>
            <el-table-column prop="sj" label="税金">
              <template slot-scope="scopr">
                <div style="float:left;width:100%;text-align:center" v-text="scopr.row.sj"></div>
              </template>
            </el-table-column>
            <el-table-column prop="hk" label="货款">
              <template slot-scope="scopr">
                <div style="float:left;width:100%;text-align:center" v-text="scopr.row.hk"></div>
              </template>
            </el-table-column>
            <el-table-column prop="hj" label="合计">
              <template slot-scope="scopr">
                <div style="float:left;width:100%;text-align:center" v-text="scopr.row.hj"></div>
              </template>
            </el-table-column>
            <el-table-column label="摘要">
              <template slot-scope="scopr">
                <div style="float:left;width:100%;text-align:center" v-text="scopr.row.zy"></div>
              </template>
            </el-table-column>
          </el-table>
          <ul class="tableButton">
            <li
              :style="{'width':width}"
              v-for="index of widthList"
              :key="index"
            >{{index == 1?'折扣后合计':index == widthList-1?from.cbzje:''}}</li>
          </ul>
        </sections>
        <div class="conditions">
          <div class="conditions-top">
            <div>
              <span>合同条款主题</span>
            </div>
            <div>合同条款内容</div>
          </div>
          <div class="conditions-center" style="height:120px">
            <div v-for="(item,index) in jxcXsddHttkList" :key="index">
              <div>
                <span v-text="item.htzt"></span>
              </div>
              <div>
                <span v-text="item.htnr"></span>
              </div>
            </div>
          </div>
        </div>
        <div class="input-box" style="margin-left:1%">
          <label class="input-label">价格审批人</label>
          <div style="float:left"></div>
        </div>
        <div class="input-box">
          <label class="input-label">价格审批时间</label>
          <div style="float:left"></div>
        </div>
        <div class="input-box">
          <label class="input-label">审核人</label>
          <div style="float:left" v-text="from.shrName"></div>
        </div>
        <div class="input-box" style="margin-left:1%">
          <label class="input-label">审核时间</label>
          <div style="float:left" v-text="from.shsj"></div>
        </div>
        <div class="input-box">
          <label class="input-label">终止执行原因</label>
          <div
            style="float:left;overflow: hidden;white-space: nowrap;"
            v-text="from.zzzxReason"
            :title="from.zzzxReason"
          ></div>
        </div>
        <div class="input-box">
          <label class="input-label">强制执行完毕原因</label>
          <div
            style="float:left;overflow: hidden;white-space: nowrap;"
            :title="from.qzzxwbReason"
            v-text="from.qzzxwbReason"
          ></div>
        </div>
      </div>
      <div class="handle-bar">
        <el-button v-if="auditStatus" type="success" @click="audit(3)">审核通过</el-button>
        <el-button v-if="auditStatus" type="info" @click="audit(2)">审核不通过</el-button>
        <el-button class="handle-button" @click.native="hidenView">关闭</el-button>
      </div>
    </flexbox>
    <el-dialog
      :modal-append-to-body="false"
      title="审核不通过原因"
      :visible.sync="auditDialog"
      width="30%"
      :before-close="handleClose"
    >
      <span>
        <el-input
          type="textarea"
          placeholder="请输入内容"
          v-model="message"
          maxlength="200"
          show-word-limit
        ></el-input>
      </span>
      <span slot="footer" class="dialog-footer">
        <el-button @click="auditDialog = false">取 消</el-button>
        <el-button type="primary" @click="auditDialogSubmit">确 定</el-button>
      </span>
    </el-dialog>
  </createView>
</template>

<script>
import createView from "../../components/createView";
import sections from "../../components/sections";
import {
  jxcXsddQueryForAdd,
  jxcXsddQueryck,
  jxcXsddAddOrUpdate,
  jxcXsddQueryForEditById,
  jxcXsddCheckStatus,
} from "@/api/jxc/jxc";
import {
  bjdQueryDwtt,
  httkQueryTypeOfContact,
  bjdQueryForEdit,
} from "@/api/crm/xsbjd";
import { xbjXjdToXsdd, xbjQueryComname } from "@/api/crm/xbjTable";
import { crmCustomerqueryById } from "@/api/crm/ggkhc";
import {
  xbjQueryCustomer,
  xbjQueryProduct,
  xbjQueryBrandTree,
  jxcXsddFileQueryByXsddId,
  adminYszdGetYlzdSetByType,
} from "@/api/crm/xbjTable";
import { jxcXsddFileUpload } from "@/api/common";
import Lockr from "lockr";
export default {
  name: "",
  components: {
    createView,
    sections,
  },
  watch: {
    "from.zje": {
      handler() {
        this.from.cbzje = (
          Number(this.from.zje) *
          (Number(this.from.zdzk) * 0.01)
        ).toFixed(2);
      },
    },
    "from.zdzk": {
      handler() {
        this.from.cbzje = (
          Number(this.from.zje) *
          (Number(this.from.zdzk) * 0.01)
        ).toFixed(2);
      },
    },
  },
  computed: {},
  data() {
    return {
      auditStatus: false,
      ckName: "",
      fplxName: "",
      zdyName1: "",
      zdyName2: "",
      zdyName3: "",
      zdyName4: "",
      zdyName5: "",
      zdyName6: "",
      zdyName7: "",
      zdyName8: "",
      zdyName9: "",
      zdyName10: "",
      ylzdType1: "",
      ylzdType2: "",
      ylzdType3: "",
      ylzdType4: "",
      ylzdType5: "",
      ylzdType6: "",
      ylzdType7: "",
      ylzdType8: "",
      ylzdType9: "",
      ylzdType10: "",
      productList: [],
      customersList: [],
      dialogCustomer: false,
      xsddTitle: "",
      typeofcontactList: [],
      dialogVisible: false,
      customerVisible: false,
      jxcXsddHttkList: [],
      options: [],
      customerList: [],
      props: {
        value: "name",
        label: "name",
        children: "children",
        multiple: true,
      },
      customerFrom: {
        page: 1,
        limit: 15,
        brandName: "",
        productModelnum: "",
        productName: "",
      },
      cascaderIds: [],
      dwttList: [],
      dialogFrom: {
        page: 1,
        limit: 15,
        name: "",
        code: "",
      },
      creator: "",
      createDate: "",
      loading: false,
      customerName: "",
      dialogVisible: false,
      customerId: "",
      dwttName: "",
      from: {
        xsddId: "",
        xsddDh: "",
        xjdId: "",
        bjdId: "",
        customerId: "",
        contactId: "",
        dwtt: "",
        hq: "",
        fplx: 1,
        zje: "",
        zdzk: 100,
        zkhZje: "",
        cbzje: "",
        pricelx: "",
        typeofcontract: "",
        remark: "",
        jhrq: "",
        skqx: "",
        shdz: "",
        ck: "",
        contactPhone: "",
        xsddlx: "",
        gdzt: "",
        sfbd: "是",
      },
      contactName: "",
      tableList: [
        {
          xsddmxId: "",
          xjdmxId: "",
          bjdmxId: "",
          productId: "",
          commnameId: "",
          brandId: "",
          quantity: "",
          measureUnitid: "",
          wsdj: "",
          measureName: "",
          comname: "",
          brandName: "",
          productName: "",
          hsdj: "",
          productSl: "",
          productModelnum: "",
          sj: "",
          hk: "",
          hj: "",
          zy: "",
        },
      ],
      xsddlxList: [
        { name: "外销类" },
        { name: "样品" },
        { name: "施工单" },
        { name: "设备销售" },
        { name: "刷卡" },
        { name: "服务销售" },
        { name: "直接销售" },
        { name: "样品销售" },
        { name: "代理商销售" },
        { name: "淘宝订单" },
        { name: "官方订单" },
      ],
      gdztList: [{ name: "正在跟进" }, { name: "跟单已结束" }],
      ckList: [],
      tableData: [],
      contactList: [],
      total: 0,
      fplxList: [
        {
          name: "增值税发票",
          id: 1,
        },
        {
          name: "普通发票",
          id: 2,
        },
        {
          name: "收据",
          id: 3,
        },
      ],
      wsdjCheckbox: false,
      hsdjCheckbox: true,
      fileList: [],
      ywyName: "",
      dialogStatus: false,
      treeId: "",
      gxrDialogStatus: false,
      gxrName: "",
      auditDialog: false,
      message: "",
      widthList: 0,
      width: "",
    };
  },

  methods: {
    handleCloseAudit() {
      this.auditDialog = false;
    },
    auditDialogSubmit() {
      jxcXsddCheckStatus({
        xsddId: this.widowData.id,
        type: 2,
        message: this.message,
      })
        .then((res) => {
          this.auditDialog = false;
          this.loading = true;
          this.$message({
            message: "操作成功",
            type: "success",
            onClose: () => {
              this.resetGetList();
              this.hidenView();
              this.loading = false;
            },
          });
        })
        .catch((res) => {});
    },
    audit(val) {
      let self = this;
      if (val == 3) {
        this.$confirm("请确认审核信息, 是否继续?", "提示", {
          confirmButtonText: "确定",
          cancelButtonText: "取消",
          type: "warning",
        })
          .then(() => {
            jxcXsddCheckStatus({
              xsddId: this.widowData.id,
              type: val,
              message: this.message,
            })
              .then((res) => {
                this.loading = true;
                this.$message({
                  message: "审核通过",
                  type: "success",
                  onClose: () => {
                    this.resetGetList();
                    this.hidenView();
                    this.loading = false;
                  },
                });
              })
              .catch((res) => {});
          })
          .catch(() => {
            this.msgInfo("取消审核");
          });
      } else {
        this.auditDialog = true;
      }
    },
    gxrDialogTreeData(id, name) {
      this.gxrName = name;
      this.from.gxr = id;
    },
    gxrDialog() {
      this.gxrDialogStatus = true;
    },
    dialogTreeData(id, name) {
      this.from.ywy = id;
      this.ywyName = name;
    },
    ywyDialog() {
      this.dialogStatus = true;
    },
    queryPhone(val) {
      for (var i in this.contactList) {
        if (this.contactList[i].contactId == val) {
          this.from.contactPhone = this.contactList[i].contactPhone;
        }
      }
    },
    deleteUpload(index) {
      this.fileList.splice(index, 1);
    },
    /** 图片选择出发 */
    xhUploadFile(event) {
      var files = event.target.files;
      if (files.length > 5) {
        this.msgInfo("最多支持上传5个文件");
        return;
      } else {
        if (files.length > 0) {
          var self = this;
          for (let index = 0; index < files.length; index++) {
            const file = files[index];
            this.sendFileRequest(file);
          }
        }
      }
    },
    sendFileRequest(file, result) {
      var params = { file: file };
      jxcXsddFileUpload(params)
        .then((res) => {
          if (this.fileList.length > 4) {
            return;
          }
          this.fileList.push({
            name: res.name,
            fileId: res.fileId,
          });
        })
        .catch(() => {});
    },
    customersIdClick(item) {
      this.customerName = item.name;
      this.from.customerId = item.customerId;
      this.contactList = item.contactList;
      this.from.contactId = item.contactList[0].contactId;
      this.from.contactPhone = item.contactList[0].contactPhone;
      this.dialogCustomer = false;
    },
    handleCloseCustomer() {
      this.dialogCustomer = false;
    },
    customerCliuck(val) {
      this.customerIndex = val;
      this.customerVisible = true;
      this.customerData();
      xbjQueryBrandTree()
        .then((res) => {
          this.options = res.data;
        })
        .catch((res) => {});
    },
    handleClose() {
      this.dialogVisible = false;
    },
    handleCloseVisible() {
      this.customerVisible = false;
    },
    search() {
      this.dialogData();
    },
    reset() {
      this.dialogFrom.page = 1;
      this.dialogFrom.limit = 15;
      this.dialogFrom.name = "";
      this.dialogFrom.code = "";
      this.dialogData();
    },
    handleSizeChange(val) {
      this.dialogFrom.limit = val;
      this.dialogData();
    },
    handleCurrentChange(val) {
      this.dialogFrom.page = val;
      this.dialogData();
    },
    hidenView() {
      window.top.close();
    },
    resetGetList() {
      window.opener.postMessage("child", window.location);
    },
    customerData() {
      xbjQueryProduct(this.customerFrom)
        .then((res) => {
          this.customerList = res.data.list;
        })
        .catch((res) => {});
    },
    dialogData() {
      xbjQueryCustomer(this.dialogFrom)
        .then((res) => {
          this.tableData = res.data.list;
          this.total = res.data.totalRow;
        })
        .catch((res) => {});
    },
    dialog() {
      this.dialogVisible = true;
      this.dialogData();
    },
    queryName(data) {
      this.contactList = data.contactList;
      this.from.contactId = data.contactList[0].contactId;
      this.from.contactPhone = data.contactList[0].contactPhone;
      this.dialogVisible = false;
      this.customerName = data.name;
      this.from.customerId = data.customerId;
      this.ywyName = data.ywyName;
      this.from.bjr = data.ywyId;
      this.customerId = data.customerId;
      this.from.contactName = data.contactName;
    },
    customerAdd() {
      this.customerVisible = false;
      for (var i in this.selectionList) {
        this.tableList[Number(i) + this.customerIndex] = Object.assign(
          {},
          this.selectionList[i]
        );
        this.$set(this.tableList, i, this.tableList[i]);
      }
    },
    customerSearch() {
      let arr = [];
      if (this.cascaderIds.length) {
        for (var i in this.cascaderIds) {
          arr.push(this.cascaderIds[i][this.cascaderIds[i].length - 1]);
        }
        this.customerFrom.brandName = arr.join("|");
      }
      this.customerData();
    },
    dwttChange(val) {
      let saleZzsl = 0;
      for (var i in this.dwttList) {
        if (this.dwttList[i].id == val) {
          saleZzsl = this.dwttList[i].saleZzsl;
        }
      }
      for (var i in this.tableList) {
        this.tableList[i].productSl = saleZzsl;
      }
    },
    deleteHttk(index) {
      this.jxcXsddHttkList.splice(index, 1);
    },
    queryData() {
      let self = this;
      adminYszdGetYlzdSetByType({
        type: 1,
      })
        .then((res) => {
          this.ylzdList = res.data;
          for (var i in this.tableList) {
            for (var k in res.data) {
              this.$set(this.tableList[i], res.data[k].ylzdName, "");
            }
          }
          for (var i in res.data) {
            let num = res.data[i].ylzdName.substring(
              res.data[i].ylzdName.indexOf("d") + 1,
              res.data[i].ylzdName.length
            );
            if (num == "1") {
              this.zdyName1 = res.data[i].zdyName;
              this.ylzdType1 = res.data[i].from;
            } else if (num == "2") {
              this.zdyName2 = res.data[i].zdyName;
              this.ylzdType2 = res.data[i].from;
            } else if (num == "3") {
              this.zdyName3 = res.data[i].zdyName;
              this.ylzdType3 = res.data[i].from;
            } else if (num == "4") {
              this.zdyName4 = res.data[i].zdyName;
              this.ylzdType4 = res.data[i].from;
            } else if (num == "5") {
              this.zdyName5 = res.data[i].zdyName;
              this.ylzdType5 = res.data[i].from;
            } else if (num == "6") {
              this.zdyName6 = res.data[i].zdyName;
              this.ylzdType6 = res.data[i].from;
            } else if (num == "7") {
              this.zdyName7 = res.data[i].zdyName;
              this.ylzdType7 = res.data[i].from;
            } else if (num == "8") {
              this.zdyName8 = res.data[i].zdyName;
              this.ylzdType8 = res.data[i].from;
            } else if (num == "9") {
              this.zdyName9 = res.data[i].zdyName;
              this.ylzdType9 = res.data[i].from;
            } else if (num == "10") {
              this.zdyName10 = res.data[i].zdyName;
              this.ylzdType10 = res.data[i].from;
            }
          }
        })
        .catch((res) => {});
      xbjQueryComname()
        .then((res) => {
          this.productList = res.data;
        })
        .catch((res) => {});
      jxcXsddQueryck()
        .then((res) => {
          this.ckList = res.data;
          this.from.ck = res.data[0].ckId;
        })
        .catch((res) => {});
      bjdQueryDwtt()
        .then((res) => {
          this.dwttList = res.data;
          this.from.dwtt = res.data[0].id;
          this.tableList[0].productSl = res.data[0].saleZzsl;
        })
        .catch((res) => {});
      httkQueryTypeOfContact({ lx: 2 })
        .then((res) => {
          this.typeofcontactList = res.data;
          this.from.typeofcontract = res.data[0].id;
        })
        .catch((res) => {});
      jxcXsddFileQueryByXsddId({
        xsddId: this.widowData.id,
      })
        .then((res) => {
          this.fileList = res.data;
        })
        .catch((res) => {});
      jxcXsddQueryForEditById({
        xsddId: this.widowData.id,
      })
        .then((res) => {
          this.from = res.data;
          self.customerName = res.data.customerName;
          self.from.xsddId = res.data.xsddId;
          self.from.customerId = res.data.customerId;
          self.from.contactId = res.data.contactId;
          self.from.xsddDh = res.data.xsddDh;
          self.from.hq = res.data.hq;
          self.from.dwtt = res.data.dwtt;
          self.from.fplx = Number(res.data.fplx);
          self.from.jhrq = res.data.jhrq;
          self.from.ck = Number(res.data.ck);
          self.from.zdzk = res.data.zdzk;
          self.from.remark = res.data.remark;
          self.from.skqx = res.data.skqx;
          self.from.shdz = res.data.shdz;
          self.tableList = res.data.jxcXsddmxList;
          self.from.typeofcontract = res.data.typeofcontract;
          self.jxcXsddHttkList = res.data.jxcXsddHttkList;
          self.from.xsddlx = res.data.xsddlx;
          self.from.gdzt = res.data.gdzt;
          self.from.sfbd = res.data.sfbd;
          self.from.contactPhone = res.data.contactPhone;
          self.contactName = res.data.contactName;
          self.createDate = res.data.createDate;
          self.ywyName = res.data.ywyName;
          self.from.sgbd = res.data.sgbd;
          self.gxrName = res.data.gxrName;
          this.ckName = res.data.ckName;
          this.dwttName = res.data.dwttName;
          for (var i in this.fplxList) {
            if (this.fplxList[i].id == Number(res.data.fplx)) {
              this.fplxName = this.fplxList[i].name;
            }
          }
          if (res.data.pricelx == 1) {
            this.wsdjCheckbox = true;
            this.hsdjCheckbox = false;
          } else {
            this.hsdjCheckbox = true;
            this.wsdjCheckbox = false;
          }
          crmCustomerqueryById({
            customerId: res.data.customerId,
          })
            .then((res) => {
              self.contactList = res.data.customerContact;
            })
            .catch((res) => {});
        })
        .catch((res) => {});
    },
    appendClick() {
      this.tableList.push({
        xsddmxId: "",
        xjdmxId: "",
        bjdmxId: "",
        productId: "",
        commnameId: "",
        brandId: "",
        quantity: "",
        measureUnitid: "",
        wsdj: "",
        measureName: "",
        commnameName: "",
        brandName: "",
        productName: "",
        hsdj: "",
        productSl: "",
        productModelnum: "",
        sj: "",
        hk: "",
        hj: "",
        zy: "",
      });
    },
    customerClick(data) {
      this.customerVisible = false;
      this.tableList[this.customerIndex].brandName = data.brandName;
      this.tableList[this.customerIndex].brandId = data.brandId;
      this.tableList[this.customerIndex].commnameId = data.comnameId;
      this.tableList[this.customerIndex].commnameName = data.commnameName;
      this.tableList[this.customerIndex].measureName = data.measureName;
      this.tableList[this.customerIndex].measureUnitid = data.measureUnitid;
      this.tableList[this.customerIndex].productName = data.productName;
      this.tableList[this.customerIndex].productId = data.productId;
      this.tableList[this.customerIndex].productModelnum = data.productModelnum;
    },
    getSummaries(param) {
      const { columns, data } = param;
      const sums = [];
      columns.forEach((column, index) => {
        if (index === 0) {
          sums[index] = "合计";
          return;
        }
        const values = data.map((item) => Number(item[column.property]));
        if (!values.every((value) => isNaN(value))) {
          sums[index] = values
            .reduce((prev, curr) => {
              const value = Number(curr);
              if (!isNaN(value)) {
                return prev + curr;
              } else {
                return prev;
              }
            }, 0)
            .toFixed(2);
          sums[index];
        } else {
          sums[index] = "";
        }
      });
      this.from.zje = sums[10];
      return sums;
    },
    customerReset() {
      this.customerFrom.page = 1;
      this.customerFrom.limit = 15;
      this.cascaderIds = [];
      this.customerFrom.brandName = "";
      this.customerFrom.productModelnum = "";
      this.customerFrom.productModelnum = "";
      this.customerData();
    },
    handleSizeChange(val) {
      this.dialogFrom.limit = val;
      this.dialogData();
    },
    handleCurrentChange(val) {
      this.dialogFrom.page = val;
      this.dialogData();
    },
    handleSizeChangeA(val) {
      this.customerFrom.limit = val;
      this.customerData();
    },
    handleCurrentChangeA(val) {
      this.customerFrom.page = val;
      this.customerData();
    },
    handleSelectionChange(val) {
      this.selectionList = val;
    },
    typeofcontactClick() {
      this.jxcXsddHttkList.push({
        htzt: "",
        htnr: "",
        typeofcontract: "",
        id: "",
      });
    },
    typeofcontactChange(val) {
      this.jxcXsddHttkList = this.termsetting[val];
    },
    quantity(row) {
      if (row.brandName == "") {
        this.msgInfo("请选择商品");
      }
    },
    deletClick(val) {
      this.tableList.splice(val, 1);
    },
  },

  created() {},

  mounted() {
    setTimeout(() => {
      this.width = 100 / $(".el-table__row")[0].cells.length + "%";
      this.widthList = $(".el-table__row")[0].cells.length;
    }, 300);
    this.widowData = this.$route.query;
    this.widowData.id = this.decode(this.$route.query.id);
    this.creator = Lockr.get("loginUserInfo").realname;
    this.createDate = this.getTime();
    if (this.widowData.type == "audit") {
      this.auditStatus = true;
    } else {
      this.auditStatus = false;
    }
    this.queryData();
  },
};
</script>
<style lang='scss' scoped>
@import "../../manage/styles/table.scss";
@import "../../../styles/detail.scss";
.tableButton {
  width: 100%;
  height: 40px;
  li {
    float: left;
    height: 40px;
    line-height: 40px;
    text-align: center;
  }
}
.conditions {
  margin-left: 20px;
  width: 98%;
  margin-left: 1%;
}
.conditions-top {
  float: left;
  div {
    text-align: center;
    border: 1px solid #999;
    background: #a3c7f1;
  }
  div:nth-child(1) {
    width: 20%;
    float: left;
    border-right: 0;
  }
  div:nth-child(2) {
    width: 80%;
    float: left;
    text-align: center;
  }
}
.conditions-center {
  div {
    float: left;
    width: 100%;
    div {
      line-height: 40px;
      text-align: center;
      border: 1px solid #999;
      span {
        margin-left: 10px;
      }
    }
    div:nth-child(1) {
      width: 20%;
      float: left;
      text-align: center;
      border-right: 0;
      border-top: 0;
    }
    div:nth-child(2) {
      width: 80%;
      float: left;
      text-align: center;
      text-align: center;
      border-top: 0;
    }
  }
}
.a-upload {
  padding: 0 10px;
  margin-top: 5px;
  height: 25px;
  line-height: 25px;
  position: relative;
  cursor: pointer;
  color: #888;
  background: #fafafa;
  border: 1px solid #ddd;
  border-radius: 4px;
  overflow: hidden;
  *display: inline;
  *zoom: 1;
  float: left;
}

.a-upload input {
  position: absolute;
  font-size: 100px;
  right: 0;
  top: 0;
  opacity: 0;
  filter: alpha(opacity=0);
  cursor: pointer;
}

.a-upload:hover {
  color: #444;
  background: #eee;
  border-color: #ccc;
  text-decoration: none;
}
.uploadStyle {
  width: 60%;
  float: left;
  line-height: 40px;
  li {
    min-width: 100px;
    float: left;
    margin: 0 5px;
  }
}
.el-icon-close {
  color: red;
  cursor: pointer;
}
</style>