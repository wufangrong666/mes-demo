<template>
  <div>
    <el-dialog
      title="选择部门"
      :visible.sync="bmDialogStatus"
      width="40%"
      style="margin-top:-5vh"
      :before-close="handleClose"
      :modal-append-to-body="false"
    >
      <div>
        <el-tree
          ref="tree"
          node-key="id"
          :props="defaultProps"
          :data="treeData"
          show-checkbox
          default-expand-all
          :check-strictly="true"
        ></el-tree>
      </div>
      <span slot="footer" class="dialog-footer">
        <el-button @click="handleClose">取 消</el-button>
        <el-button type="primary" @click="submit">确 定</el-button>
      </span>
    </el-dialog>
  </div>
</template>

<script>
import { deptQueryDeptTree } from "@/api/crm/ppgl";
import { usersList } from "@/api/common";

export default {
  name: "",
  props: ["bmDialogStatus", "treeId"],
  watch: {
    bmDialogStatus: {
      handler() {
        if (this.bmDialogStatus) {
          this.dialogYwyTree();
        }
      }
    }
  },
  data() {
    return {
      activeName: "department",
      defaultProps: {
        label: "name",
        children: "children"
      },
      defaultPropsR: {
        label: "roleName",
        children: "user"
      },
      treeDataR: [],
      treeData: [],
      realtableData: [],
      realname: "",
      realStatus: "",
      realStatusList: [
        { name: "在职", id: "1" },
        { name: "离职", id: "0" }
      ],
      realRadio: ""
    };
  },

  methods: {
    submit() {
      this.handleClose();
      if (this.$refs.tree.getCheckedKeys().length == 0) {
        this.$emit("bmDialogTreeData", "", "");
      } else {
        this.$emit(
          "bmDialogTreeData",
          this.$refs.tree.getCheckedKeys().join(","),
          this.$refs.tree
            .getCheckedNodes()
            .map(function(item) {
              return item.name;
            })
            .join(",")
        );
      }
    },
    handleClose() {
      this.$emit("close");
    },
    dialogYwyTree() {
      deptQueryDeptTree({
        type: "tree"
      })
        .then(res => {
          this.treeData = res.data;
        })
        .catch(res => {});
    }
  },

  created() {},

  mounted() {}
};
</script>
<style lang='scss' scoped>
</style>