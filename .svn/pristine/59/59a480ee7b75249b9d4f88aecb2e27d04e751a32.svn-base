<template>
  <el-container>
    <el-header class="nav-container">
      <navbar :navIndex="5" @nav-items-click="navClick"></navbar>
    </el-header>
    <el-container>
      <el-aside width="auto" class="aside-container">
        <sidebar :items="emailRouters.children" createButtonTitle="快速创建" mainRouter="email">
          <div slot="add" class="quick-add">
            <div class="quick-add-content">
              <p v-for="(item, index) in list" :key="index" @click="addSkip(item)">
                <i class="wukong" :class="'wukong-' + item.icon"></i>
                <span>{{item.label}}</span>
              </p>
            </div>
          </div>
        </sidebar>
      </el-aside>
      <el-main id="crm-main-container" style="padding:15px;">
        <app-main></app-main>
      </el-main>
    </el-container>
  </el-container>
</template>

<script>
import { mapGetters } from "vuex";
import { childrenMenu } from "@/router/modules/email/email";
import { Navbar, Sidebar, AppMain } from "./components";

export default {
  name: "Layout",
  components: {
    Navbar,
    Sidebar,
    AppMain
  },
  computed: {
    ...mapGetters(["email", "emailRouters"]),
    permissonProject() {
      return (
        this.project &&
        this.project.projectManage &&
        this.project.projectManage.save
      );
    }
  },
  data() {
    return {
      isCreate: false,
      sidebarItems: [],
      list: [
        {
          label: "外部邮件",
          icon: "log",
          img: require("@/assets/img/add_journal.png")
        }
        // {
        //   label: "内部邮件",
        //   icon: "log",
        //   img: require("@/assets/img/add_journal.png")
        // },
      ]
    };
  },
  created() {
    this.sidebarItems = childrenMenu;
  },
  methods: {
    navClick(index) {},
    addSkip(item) {
      this.$router.push({
        path: "/email/ExternalMail/outwriteNewEmail"
      });
      let type = item.index;
      // if(type == ""){
      //   type = ""
      // }
    },
    quicklyCreate() {
      this.isCreate = true;
    }
  },

  beforeDestroy() {
    this.$bus.$off("project-setting");
    this.$bus.$off("add-project");
    this.$bus.$off("delete-project");
    this.$bus.$off("recover-project");
  }
};
</script>

<style lang="scss" scoped>
@import "./styles/common.scss";
.el-container {
  min-height: 0;
}
.aside-container {
  position: relative;
  background-color: #001529;
  box-sizing: border-box;
  border-right: solid 1px #e6e6e6;
  overflow: visible;
}

.nav-container {
  padding: 0;
  // box-shadow: 0px 1px 2px #dbdbdb;
  z-index: 100;
  min-width: 1200px;
}
.quick-add {
  height: 178px;
}
</style>
