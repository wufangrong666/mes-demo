<template>
  <div class="c-container">
    <!-- 标题查询 -->
    <div class="title">{{title}}</div>
    <div class="input-box">
      <label class="input-label">账户</label>
      <el-select v-model="from.mailUsername" placeholder="请选择">
        <el-option
          v-for="item in mailUserList"
          :key="item.mailId"
          :label="item.mailUsername"
          :value="item.mailUsername"
        ></el-option>
      </el-select>
    </div>
    <div class="input-box">
      <label class="input-label">收件人</label>
      <el-input placeholder="请输入收件人" clearable v-model="from.mailTo"></el-input>
    </div>
    <div class="input-box">
      <label class="input-label">邮件主题</label>
      <el-input placeholder="请输入邮件主题" clearable v-model="from.title"></el-input>
    </div>
    <div class="input-box" style="width:25%">
      <label class="input-label">接收时间</label>
      <el-date-picker
        value-format="yyyy-MM-dd"
        v-model="item"
        type="daterange"
        range-separator="至"
        start-placeholder="开始日期"
        end-placeholder="结束日期"
      ></el-date-picker>
    </div>
    <div class="input-box" style="width:120px">
      <el-button @click="search" type="primary">查询</el-button>
      <el-button @click="reset">重置</el-button>
    </div>

    <!-- 新增更多 -->
    <div class="right-container">
      <el-dropdown trigger="click" v-if="moreTypes.length > 0" @command="handleTypeDrop">
        <flexbox class="right-more-item">
          <div>更多</div>
          <i class="el-icon-arrow-down el-icon--right" style="color:#777;"></i>
        </flexbox>
        <el-dropdown-menu style="height:100px" slot="dropdown">
          <el-dropdown-item
            v-for="(item, index) in moreTypes"
            :key="index"
            :command="item.type"
          >{{item.name}}</el-dropdown-item>
        </el-dropdown-menu>
      </el-dropdown>
    </div>
    <el-table id="table" :height="tableHeight" :data="tableData" stripe style="width: 100%">
      <el-table-column prop="mailTo" label="收件人"></el-table-column>
      <el-table-column prop="mailUsername" label="发件人"></el-table-column>
      <el-table-column label="邮箱主题">
        <template slot-scope="scope">
          <span
            style="color:#0000ff;cursor:pointer"
            @click="detailsCheck(scope.row)"
          >{{scope.row.mailTitle}}</span>
        </template>
      </el-table-column>
      <el-table-column prop="isfile" label="附件"></el-table-column>
      <el-table-column prop="createDate" label="时间"></el-table-column>
      <el-table-column label="操作">
        <template slot-scope="scope">
          <el-button style="color:#f56c6c" @click="deleteClick(scope.row)" type="text">删除</el-button>
        </template>
      </el-table-column>
    </el-table>
    <div class="p-contianer">
      <el-pagination
        class="p-bar"
        @size-change="handleSizeChange"
        @current-change="handleCurrentChange"
        :current-page="from.page"
        :page-sizes="pageSizes"
        :page-size.sync="from.limit"
        layout="total, sizes, prev, pager, next, jumper"
        :total="total"
      ></el-pagination>
    </div>
  </div>
</template>

<script type="text/javascript">
import {
  mailSendFindSendMail,
  mailSendDelMailBySendId,
  mailSendFindMailInfoBySendId,
  mailSendFindAccount,
} from "@/api/email/email";
import Lockr from "lockr";

export default {
  name: "yxszIndex",
  computed: {},
  data() {
    return {
      value: "",
      options: [],
      mailUserList: [],
      tableData: [],
      total: 0,
      tableHeight: document.documentElement.clientHeight - 194, // 表的高度
      pageSizes: [15, 30, 60, 100], //切换每页显示
      from: {
        page: 1,
        limit: 15,
        mailUsername: "", //	邮箱地址
        mailTo: "", //	收件邮箱
        startDate: "", //	接收时间开始
        endDate: "", //	接收时间结束
        title: "",
      },
      detailsList: {},
      item: [],
      title: "",
      inputContent: "",
      /** 更多操作 */
      moreTypes: [],
      // 导入
      showImport: false,
      details: {
        mailTitle: "",
        sendMail: "",
        receiveTime: "",
        receiveMail: "",
        isfile: "",
        mailContent: "",
      },
    };
  },
  activated() {
    this.loginData();
  },
  mounted() {
    // 线索和客户判断更多操作
    this.moreTypes.push({ type: "enter", name: "导入" });
    this.moreTypes.push({ type: "out", name: "导出" });
    this.title = this.$route.meta.title;
    /** 控制table的高度 */
    window.onresize = () => {
      this.updateTableHeight();
    };
  },
  methods: {
    detailsCheck(val) {
      this.windowOpen("/sjxMx", {
        id: this.encode(val.sendId),
        type: "yfsMx",
      });
    },
    deleteClick(val) {
      this.$confirm("此操作将删除该记录, 是否继续?", "提示", {
        confirmButtonText: "确定",
        cancelButtonText: "取消",
        type: "warning",
      })
        .then(() => {
          mailSendDelMailBySendId({
            sendId: val.sendId,
          })
            .then((res) => {
              this.msgSuccess("删除成功");
              this.loginData();
            })
            .catch((res) => {});
        })
        .catch(() => {
          this.msgSuccess("删除失败");
        });
    },
    //查询
    search() {
      if (this.item.length) {
        this.from.startDate = this.item[0];
        this.from.endDate = this.item[1];
      }
      this.loginData();
    },
    reset() {
      this.from.mailUsername = "";
      this.from.page = 1;
      this.from.limit = 15;
      this.item = [];
      this.from.startDate = "";
      this.from.endDate = "";
      this.from.mailTo = "";
      this.from.title = "";
      this.loginData();
    },
    //获取列表数据
    loginData() {
      mailSendFindSendMail(this.from).then((res) => {
        this.tableData = res.data;
        this.total = res.total;
      });
      mailSendFindAccount({
        userId: Lockr.get("loginUserInfo").userId,
      })
        .then((res) => {
          this.mailUserList = res.data;
        })
        .catch((res) => {});
    },
    handleTypeDrop(command) {
      if (command == "out") {
        this.$emit("on-export");
      } else if (command == "enter") {
        this.showImport = true;
      }
    },
    handleSizeChange(val) {
      this.from.limit = val;
      this.loginData();
    },
    handleCurrentChange(val) {
      this.from.page = val;
      this.loginData();
    },
    /**
     * 更新表高
     */
    updateTableHeight() {
      var offsetHei = document.documentElement.clientHeight;
      var removeHeight = Object.keys(this.tableData).length > 0 ? 310 : 240;
      this.tableHeight = offsetHei - removeHeight;
    },
  },
};
</script>
<style lang="scss" scoped>
@import "../../../manage/styles/table.scss";
#table {
  border: 1px solid #e6e6e6;
}
.c-container {
  height: 60px;
  position: relative;
  z-index: 100;
  .title {
    float: left;
    padding: 0 20px;
    font-size: 18px;
    line-height: 60px;
  }
  .input-box {
    width: 14%;
    margin: 20px 0 0 15px;
    .el-date-editor {
      width: 80%;
    }
    .input-label {
      width: 60px;
    }
  }
  .input-dialog {
    width: 100%;
    .input-label {
      float: left;
      width: 30%;
      line-height: 40px;
    }
    .el-input {
      line-height: 40px;
      width: 60%;
    }
    .el-select {
      line-height: 40px;
      width: 60%;
    }
  }
  .right-container {
    float: right;
    margin-top: 20px;
    position: relative;
    .right-item {
      float: left;
      margin-right: 10px;
      padding: 8px 10px;
      font-size: 13px;
      border-radius: 2px;
    }

    .right-more-item {
      cursor: pointer;
      border: 1px solid #dcdfe6;
      background-color: white;
      font-size: 13px;
      color: #777;
      padding: 0 12px;
      border-radius: 2px;
      height: 31px;
    }
  }
}
</style>
